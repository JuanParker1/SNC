@model IEnumerable<ShopNow.Models.Category>
@using GridMvc.Html
@{
    ViewBag.Title = "Category";
}
<title>ShopNow | Category List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<div class="container-fluid mb-5">
    <div class="row">
        <div class="col-md-6">
            <h4 class="text-success" style="letter-spacing:1px">CATEGORY LIST</h4>
        </div>
        <div class="col-md-6 text-right">
            <a data-toggle="modal" data-target="#createModal" href="createModal"><span class="fa fa-plus"></span> New Category</a>
        </div>
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model).Columns(columns =>
{
columns.Add(c => c.Name).Titled("Name").Filterable(true).SetWidth(20);
columns.Add(c => c.ProductTypeName).Titled("Product Type").Filterable(true).SetWidth(20);
columns.Add(c => c.OrderNo).Titled("Order No.").Filterable(true).SetWidth(20);
   columns.Add().Encoded(false).Sanitized(false).Titled("Action").SetWidth(5)
             .RenderValueAs(o => @<div>
                    <a href="editModal" class="text-info edit-prompt mr-5" data-id=@o.Id data-name="@o.Name" data-producttypeid="@o.ProductTypeId" data-producttypename="@o.ProductTypeName" data-orderno=@o.OrderNo data-imagepath="@o.ImagePath" data-target="#editModal" data-toggle="modal"><i class="fa fa-edit fa-lg"></i></a>
                    <a href="javascript:void(0)" data-id=@o.Id class="text-danger btnDelete"><i class="fa fa-trash fa-lg"></i></a>
                </div>);
}).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createModal" role="dialog" aria-labelledby="createModalLabel">
    <div class="modal-dialog" role="document">
        <form action="/Category/Save" method="post" enctype="multipart/form-data">
            <div class="modal-content">
                <div class="modal-header alert alert-info">
                    <h5 class="modal-title" id="createModalLabel">New Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <div class="col-md-6">
                            <label class="col-form-label font-weight-bold text-secondary">Category Name</label>
                            <input type="text" name="Name" id="Name" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="col-form-label"><strong class="text-secondary">Item Type</strong></label>
                            <select name="ProductTypeId" class="form-control" id="ProductTypeId">
                            </select>
                            <input type="hidden" id="ProductTypeName" name="ProductTypeName" />
                        </div>
                        <div class="col-md-6">
                            <label class="col-form-label font-weight-bold text-secondary">Adscore</label>
                            <input type="number" value="1" name="OrderNo" id="OrderNo" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <p class="col-form-label font-weight-bold text-secondary">Image</p>
                            <div class="img-upload-container ml-2">
                                <img class="img-container w-100 h-100" id="img-CategoryImage" onerror="this.src='/Images/No Photo.png'" />
                                <input type="file" id="CategoryImage" name="CategoryImage" class="d-none" />
                                <label for="CategoryImage" class="img-browse"><span class="fa fa-plus"></span> Select Image</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" id="Create" name="Create" value="Save" class="btn btn-success float-right Save" />
                </div>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="editModal" role="dialog" aria-labelledby="editModalLabel">
    <div class="modal-dialog" role="document">
        <form action="/Category/Edit" method="post" enctype="multipart/form-data">
            <div class="modal-content">
                <div class="modal-header alert alert-info">
                    <h5 class="modal-title" id="editModalLabel">Update Category</h5>
                    <button type="button" class="btnClose close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group row">
                        <div class="col-md-6">
                            <input type="hidden" name="Id" id="CategoryId" />
                            <label class="col-form-label font-weight-bold text-secondary">Category Name</label>
                            <input type="text" name="editName" id="editName" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="col-form-label font-weight-bold text-secondary">Item Type</label>
                            <select name="editProductTypeId" class="form-control" id="editProductTypeId">
                            </select>
                            <input type="hidden" id="editProductTypeName" name="editProductTypeName" />
                            <div id="ProductTypeEdit"></div>
                        </div>
                        <div class="col-md-6">
                            <label class="col-form-label font-weight-bold text-secondary">Adscore</label>
                            <input type="number" name="editOrderNo" id="editOrderNo" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <p class="col-form-label text-secondary font-weight-bold">Image</p>
                            <div class="img-upload-container ml-2">
                                <img class="img-container" id="imgeditCategoryImage" src="/Images/No Photo.png" onerror="this.src='/Images/No Photo.png'" style="width:120px;height:120px;" />
                                <input type="file" id="editCategoryImage" name="editCategoryImage" class="d-none" />
                                <input type="hidden" name="ImagePath" />
                                <label for="editCategoryImage" class="img-browse"><span class="fa fa-plus"></span> Select Image</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" name="Edit" value="Update" class="btn btn-success float-right" />
                </div>
            </div>
        </form>
    </div>
</div>
@section Scripts
{
    <script src="~/Scripts/ValidateRequiredFields.js"></script>
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <link href="~/Content/multiple-image-upload.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            //$('#ProductTypeId').on('change', function () {
            //    let selectedType = $(this).find("option:selected").text();
            //    $('[name="ProductTypeName"]').val(selectedType);
            //});
            //$('#edit-ProductTypeId').on('change', function () {
            //    var selectedType = $(this).find("option:selected").text();
            //    $('#edit-ProductTypeName').val(selectedType);
            //});
            $('#ProductTypeId').select2({
                placeholder: "Search Type",
                width: '100%',
                ajax: {
                    url: "/ProductType/GetSelect2List",
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ProductTypeName"]').val(e.params.data.text);
            });

            $('#editProductTypeId').select2({
                placeholder: "Search Type",
                width: '100%',
                ajax: {
                    url: "/ProductType/GetSelect2List",
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('#editProductTypeName').val(e.params.data.text);
            });

            //$('#Create').on('click', function () {
            //    var isValidate = false;
            //    var requiredArr = [
            //        'Name',
            //        'ProductTypeId'
            //    ];
            //    isValidate = ValidateEmptyRequiredFiels(requiredArr);
            //    if (isValidate) {
            //        var category = {
            //            Name: $('#Name').val(),
            //            ProductTypeId: $('#ProductTypeId').val(),
            //            ProductTypeName: $('#ProductTypeName').val(),
            //            OrderNo: $('#OrderNo').val()
            //        }
            //        $.post("/Category/Save?", { category: category }, function (data) {
            //            if (data.IsAdded == true) {
            //                swal({
            //                    title: data.message,
            //                    text: "",
            //                    type: "success"
            //                }, function () {
            //                    window.location.reload();
            //                });
            //            } else {
            //                if (data.message1 != null || data.message1 != "") {
            //                    swal(data.message1, "", "warning");
            //                    $('#Name').val("");
            //                    $('#ProductTypeId').val("");
            //                    $('#OrderNo').val("");
            //                }
            //            }
            //        });
            //    }
            //});

            $(".edit-prompt").click(function () {
                var typeid = $(this).attr('data-producttypeid');
                var typename = $(this).attr('data-producttypename');
                var imagepath = $(this).attr('data-imagepath');
                $('#CategoryId').val($(this).attr('data-id'));
                $('#editName').val($(this).attr('data-name'));
                $('#editProductTypeId').append($("<option></option>").attr("value", typeid).text(typename));
                $('#editProductTypeName').val($(this).attr('data-producttypename'));
                $('#editOrderNo').val($(this).attr('data-orderno'));
                $('#imgeditCategoryImage').attr('src', 'https://s3.ap-south-1.amazonaws.com/shopnowchat.com/Medium/' + imagepath);
                $('input[name="ImagePath"]').val(imagepath);
            });

            //$(".Edit").click(function () {
            //    var category = {
            //        Id: $('#CategoryId').val(),
            //        Name: $('#edit-Name').val(),
            //        ProductTypeId: $('#edit-ProductTypeId').val(),
            //        ProductTypeName: $('#edit-ProductTypeName').val(),
            //        OrderNo: $('#edit-OrderNo').val()
            //    }
            //    if ($('#edit-Name').val() == "" || $('#edit-Name').val() == null) {
            //        swal("Name is Empty.", "Please Enter a Category Name", "warning");
            //    }
            //    else {
            //        $.post("/Category/Edit", { categoryModel: category }, function (data) {
            //            if (data.message != null || data.message != "") {
            //                swal({
            //                    title: data.message,
            //                    text: "",
            //                    type: "success"
            //                }, function () {
            //                    window.location.reload();
            //                });
            //            }
            //        });
            //    }
            //});

            //$("#editModal").on("hidden.bs.modal", function () {
            //    window.location.reload();
            //});

            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Category/Delete", { id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

            function readURLCategory(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#img-CategoryImage').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }
            function readURLEditCategory(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $('#imgeditCategoryImage').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#CategoryImage").change(function () {
                readURLCategory(this);
            });
            $("#editCategoryImage").change(function () {
                readURLEditCategory(this);
            });

        });

    </script>
}



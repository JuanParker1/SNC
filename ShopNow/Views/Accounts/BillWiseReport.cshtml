@model ShopNow.ViewModels.AccountsBillWiseReportViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "Bill Wise Report";
}
<title>ShopNow | @ViewBag.Title</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<style>
    .grid-mvc {
        overflow-x: scroll;
    }

        .grid-mvc table {
            width: auto;
        }
</style>
<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-3">
            <h5 class="mt-1 text-uppercase text-success" style="letter-spacing:1px">@ViewBag.Title</h5>
        </div>
        @*<div class="col-md-6">
            <form method="get" action="/Payment/ShopPayment">
                <div class="row">
                    <div class="col-md-4"><input id="date-earning" type="date" class="form-control" name="EarningDate" value="@Model.EarningDate.Value.ToString("yyyy-MM-dd")" /></div>
                    <input type="submit" class="btn btn-info" value="Apply Filter" />
                </div>
            </form>
        </div>
        @if (Model.ListItems.Count != 0)
        {
            <div class="col-md-3 text-right">
                <input type="button" id="btnExport" class="btn btn-vsm btn-secondary" value="Export To Excel" />
            </div>
        }*@
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model.ListItems).Columns(columns =>
               {
                   columns.Add(c => c.SNo).Titled("SNo").Filterable(true).SetWidth(1);
                   columns.Add(c => c.Date).Titled("Order Date").Filterable(true).SetWidth(20).Format("{0:dd-MMM-yyyy}");
                   columns.Add(c => c.OrderNumber).Titled("Order Number").Filterable(true).SetWidth(10);
                   columns.Add(c => c.ShopName).Titled("Shop Name").Filterable(true).SetWidth(4);
                   columns.Add(c => c.GSTNumber).Titled("GST Number").Filterable(true).SetWidth(10);
                   columns.Add(c => c.MenuPrice).Titled("Menu Price").Filterable(true).SetWidth(10);
                   columns.Add(c => c.ShopBillAmount).Titled("Shop BillAmount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.PriceDifference).Titled("Price Difference").Filterable(true).SetWidth(10);
                   columns.Add(c => c.CustomerPaidAmount).Titled("Customer PaidAmount").Filterable(true).SetWidth(8);
                   columns.Add(c => c.RefundAmount).Titled("Refund Amount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.FinalAmount).Titled("Final Amount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.DeliveryAmountFromCustomer).Titled("DeliveryAmount From Customer").Filterable(true).SetWidth(10);
                   columns.Add(c => c.DeliveryDiscount).Titled("Delivery Discount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.TotalDeliveryCharge).Titled("Total DeliveryCharge").Filterable(true).SetWidth(10);
                   columns.Add(c => c.DeliveryChargePaidToDeliveryBoy).Titled("DeliveryCharge PaidTo DeliveryBoy").Filterable(true).SetWidth(10);
                   columns.Add(c => c.DeliveryChargeProfit).Titled("DeliveryCharge Profit").Filterable(true).SetWidth(10);
                   columns.Add(c => c.AmountProfit).Titled("Trade Profit").Filterable(true).SetWidth(10);
               }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="/Scripts/exporttoexcel/Table2ExcelNew.js"></script>
    <script>
        $(document).ready(function () {
            //var selectedDate = $('#date-earning').val();
            //$('#date').val(selectedDate);

            //$('#date-earning').on('change', function () {
            //    $('#date').val($(this).val());
            //});


            $("#btnExport").on('click', function () {
                $(function () {
                    Table2Excel.extend((cell, cellText) => {
                        return $(cell).attr('type') == 'string' ? { t: 's', v: cellText } : { t: 'n', v: cellText };
                    });
                    var table2excel = new Table2Excel({
                        defaultFileName: "ShopPayment",
                    });
                    table2excel.export($("#table-excel"));
                });
            });
        });
    </script>
}

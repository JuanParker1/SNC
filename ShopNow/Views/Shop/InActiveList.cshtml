@model IEnumerable<ShopNow.Models.Shop>
@using GridMvc.Html
@{
    ViewBag.Title = "InActive Shop List";
}
<title>ShopNow | InActive Shop List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <h5 class="text-success" style="letter-spacing:1px">APPROVAL PENDING SHOP LIST</h5>
        </div>
        <div class="col-md-6 text-right">
            <a href="~/Shop/List" target="_blank"><span class="fa fa-bars"></span>&nbsp;Shop List</a>
        </div>

        <div class="col-md-12">
            <div class="card shadow mb-3">
                <div class="card-body">
                    @Html.Grid(Model).Columns(columns =>
                    {
                         columns.Add(s => s.Name).Titled("Shop Name").Filterable(true).SetWidth(10);
                         columns.Add(s => s.OwnerPhoneNumber).Titled("Prop. No.").Filterable(true).SetWidth(15);
                         columns.Add(s => s.PhoneNumber).RenderValueAs(s => s.PhoneNumber != null ? s.PhoneNumber : s.ManualPhoneNumber).Titled("Shop PhoneNumber").Filterable(true).SetWidth(10);
                         columns.Add(s => s.ShopCategoryName).RenderValueAs(s => s.ShopCategoryName != null ? s.ShopCategoryName : "N/A").Titled("Shop Type").Filterable(true).SetWidth(10);
                         columns.Add(b => b.Address).Titled("Address").Filterable(true).SetWidth(40);
                         //columns.Add(s => s.StateName).Titled("State").Filterable(true).SetWidth(10);
                         //columns.Add(s => s.DistrictName).Titled("District").Filterable(true).SetWidth(10);
                         //columns.Add(s => s.PinCode).Titled("PIN Code").Filterable(true).SetWidth(10);
                         //columns.Add(s => s.DateEncoded).Titled("Date").Filterable(true).SetWidth(10);
                         columns.Add().Encoded(false).Sanitized(false).Titled("Action").Filterable(false).SetWidth(20)
                        .RenderValueAs(o => @<div>
                      <a href="~/Shop/Edit?id=@HttpUtility.UrlEncode(ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id))" class="text-info mr-4"><i class="fa fa-edit fa-2x"></i></a>
                      <a href="javascript:void(0)" data-id="@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)" class="text-danger btnDelete"><i class="fa fa-trash fa-2x"></i></a>
                     </div>);
                   }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Shop/Delete", { id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });
        });
    </script>
}
@model IEnumerable<ShopNow.Models.Shop>
@using GridMvc.Html
@{
    ViewBag.Title = "Shop List";
}
<title>SNOWCH | Shop List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<link href="~/Content/switch.css" rel="stylesheet" />
<div class="container-fluid mb-3">
    <div class="row">
        <div class="col-md-4">
            <h5 class="mt-1 text-success" style="letter-spacing:1px">SHOP LIST</h5>
        </div>
        <div class="col-md-8 text-right">
            <a href="~/Shop/DeletedShop" class="btn btn-sm btn-danger mr-2" target="_blank"> Deleted Shop</a>
            <a href="~/Shop/InactiveList" class="btn btn-sm btn-secondary mr-2" target="_self"><span class="fa fa-hand-point-up"></span> Approval Pending</a>
            <a href="~/Shop/Create" class="btn btn-sm btn-primary" target="_self"><span class="fa fa-plus"></span> New Shop</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    <form method="get" action="/Shop/List">
                        <div class="row mb-3">
                            <div class="col-md-4">
                                <select id="select-district" class="form-control" name="District">
                                    @if (ViewBag.District != "")
                                    {
                                        <option value="@ViewBag.District">@ViewBag.District</option>
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <input type="submit" class="btn btn-info mr-3" value="Filter" />
                                <a href="/Shop/List" class="btn btn-warning">Clear</a>
                            </div>
                        </div>
                    </form>
                    @Html.Grid(Model).Columns(columns =>
                    {
                        columns.Add(c => c.Name).Titled("Name").Filterable(true).Encoded(false).Sanitized(false)
                          .RenderValueAs(s => Html.ActionLink(s.Name, "Details", new { Id = ShopNow.Helpers.AdminHelpers.ECodeInt(s.Id) }).ToHtmlString()).SetWidth(15);
                        columns.Add(c => c.OwnerPhoneNumber).Titled("OwnerPhoneNo").Filterable(true).SetWidth(30);
                        columns.Add(c => c.PhoneNumber).Titled("PhoneNo.").Filterable(true).SetWidth(10);
                        columns.Add(c => c.ShopCategoryName).Titled("Shop Type").Filterable(true).SetWidth(20);
                        columns.Add(c => c.Address).Titled("Address").Filterable(true).SetWidth(40);
                        columns.Add(c => c.PinCode).Titled("PinCode").Filterable(true).SetWidth(5);
                        columns.Add().Encoded(false).Sanitized(false).RenderValueAs(cs => cs.Status == 6 ?
                          Html.ActionLink("Activate", "Active", new { Id = cs.Id }, new { @class = "btn btn-success btn-vsm mb-1", @style = "padding: 3px 14px" }).ToHtmlString() :
                          Html.ActionLink("InActive", "InActiveLowBalance", new { Id = cs.Id }, new { @class = "btn btn-secondary btn-vsm mb-1", @style = "padding: 3px 14px" }).ToHtmlString()).Titled("Status").SetWidth(8);
                        columns.Add().Encoded(false).Sanitized(false)
                          .RenderValueAs(s => new HtmlString("<label class='switch'> <input type='checkbox' value='" + s.IsOnline + "' Id='Id_" + s.Id + "' class='CheckOnline' data-id='" + s.Id + "'><span class='slider round'></span></label>")).Titled("IsOnline").SetWidth(8);
                        columns.Add().Encoded(false).Sanitized(false)
                          .RenderValueAs(s => new HtmlString("<label class='switch'> <input type='checkbox' value='" + s.IsTrail + "' Id='Id_" + s.Id + "' class='check-trail' data-id='" + s.Id + "'><span class='slider round'></span></label>")).Titled("IsTrail").SetWidth(8);
                        columns.Add().Encoded(false).Sanitized(false).Titled("Action").SetWidth(5)
                          .RenderValueAs(o => @<div>
                             <a href="~/Shop/Edit?id=@HttpUtility.UrlEncode(ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id))&district=@ViewBag.District" class="text-info mr-4"><i class="fa fa-edit fa-2x"></i></a>
                             <a href="javascript:void(0)" data-id="@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)" class="text-danger btnDelete"><i class="fa fa-trash fa-2x"></i></a>  </div>);
                    }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {

            $('table tbody tr').each(function () {
                var $this = $(this).find(".CheckOnline");
                if ($this.val() == 'True')
                    $this.prop('checked', true);
                else
                    $this.prop('checked', false);

                var $trail = $(this).find(".check-trail");
                if ($trail.val() == 'True')
                    $trail.prop('checked', true);
                else
                    $trail.prop('checked', false);
            });

            $('.CheckOnline').on('click', function () {
                var id = $(this).data('id');
                if ($(this).is(':checked') == true) {
                    $.post('/Shop/UpdateShopOnline', { Id: id, isOnline: true }, function () { });
                }
                else {
                    $.post('/Shop/UpdateShopOnline', { Id: id, isOnline: false }, function () { });
                }
            });

            $('.check-trail').on('click', function () {
                var id = $(this).data('id');
                if ($(this).is(':checked') == true) {
                    $.post('/Shop/UpdateShopTrail', { Id: id, isTrail: true }, function () { });
                }
                else {
                    $.post('/Shop/UpdateShopTrail', { Id: id, isTrail: false }, function () { });
                }
            });

            $(".btnDelete").click(function () {
                var id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Shop/Delete", { id: id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

            $('#select-district').select2({
                placeholder: "Search District Name",
                ajax: {
                    url: "/Shop/GetDistrictSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            });

        });
    </script>
}
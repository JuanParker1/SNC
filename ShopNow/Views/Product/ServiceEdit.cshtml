@model ShopNow.ViewModels.ProductCreateEditViewModel
@{
    ViewBag.Title = "Service Update";
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        <h3>Error:</h3>
        <p>
            @ViewBag.ErrorMessage
        </p>
    </div>
}
<div class="container my-0">
    <div class="row bg-green-200">
        <div class="col-md-12 mx-auto">
            @using (Html.BeginForm("ServiceEdit", "Product", FormMethod.Post, new { id = "ProductForm", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <div class="card">
                    <div class="card-header">
                        <span class="text-success h5"><strong>Service Entry</strong></span>
                    </div>
                    <div class="card-body row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label col-sm-12" for="ShopName"><strong class="text-secondary">Shop Name</strong></label>
                                <div class="col-sm-12">
                                    @if (ViewBag.user != null)
                                    {
                                        @ViewBag.user
                                    }
                                    else
                                    {
                                        <select id="ShopCode" name="ShopCode" class="form-control"></select>
                                        <input type="hidden" name="ShopName" id="ShopName" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label class="control-label col-sm-12" for="BrandName"><strong class="text-secondary">Brand Name</strong></label>
                            <div class="form-group">
                                <select id="BrandCode" name="BrandCode" class="form-control"></select>
                                <input type="hidden" name="BrandName" id="BrandName" />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <label class="control-label col-sm-12" for="CategoryName"><strong class="text-secondary">Category Name</strong></label>
                            <div class="form-group">
                                <select id="CategoryCode" name="CategoryCode" class="form-control"></select>
                                <input type="hidden" name="CategoryName" id="CategoryName" />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label col-sm-12" for="CategoryName"><strong class="text-secondary">Product Name</strong></label>
                                <div class="col-sm-12">
                                    <input id="Name" type="text" class="form-control" name="Name" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label col-sm-12" for="Price"><strong class="text-secondary">Price</strong></label>
                                <div class="col-sm-12">
                                    <input id="Price" type="text" class="form-control" name="Price" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label class="control-label col-sm-12" for="Quantity"><strong class="text-secondary">Quantity</strong></label>
                                <div class="col-sm-12">
                                    <input id="Qty" type="text" class="form-control" name="Qty" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label class="control-label col-sm-12" for="CategoryName"><strong class="text-secondary">Image</strong></label>
                                <div class="col-md-8">
                                    <input type="file" name="AddOnImage" id="AddOnImage" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group  ">
                            <div class="offset-3 text-right pl-3">
                                <input type="button" class="btn btn-success mt-2 float-right" id="addToAddOns" value="Add to AddOns" />
                            </div>
                        </div>
                        <div class="d-none" id="divAddOns">
                            <table class="table table-borderless table-striped table-condensed w-75 mr-auto ml-5" id="tbl-addOns">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th class="w-50">Image</th>
                                        <th>Qty</th>
                                        <th>Price</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr></tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <hr />

                    <div class="form-group row">
                        <div class="col-md-4 mx-auto">
                            <button type="submit" class="btn btn-block btn-success Save"><span class="glyphicon glyphicon-file"></span> Save</button>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</div>


@section Scripts
{
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script src="~/Scripts/ValidateRequiredFields.js"></script>
    <script>
        $(document).ready(function () {
            var estPrice = parseFloat($("#EstimatedPrice").val());
            var new_estPrice = $("#EstimatedPrice").val(estPrice.toFixed(2));

            var acqPrice = parseFloat($("#AcquisitionPrice").val());
            var new_acqPrice = $("#AcquisitionPrice").val(acqPrice.toFixed(2));

            var acqPriceDollar = parseFloat($("#AcquisitionPriceDollar").val());
            var new_acqPriceDollar = $("#AcquisitionPriceDollar").val(acqPriceDollar.toFixed(2));
        });

        $(document).ready(function () {
            var array = $('#Name').val().split("-");
            $('#ModelName1').val(array[0]);
            $('#ModelName2').val(array[1]);
            $('#ModelName3').val(array[2]);
            if (array[3] == undefined) {
                $('#ModelName4').val('xxxx');
            }
            else {
                $('#ModelName4').val(array[3]);
            }
        });
        function limit(element) {
            var max_chars = 5;
            if (element.value.length > max_chars) {
                element.value = element.value.substr(0, max_chars);
            }
        }
        function limitSeven(element) {
            var max_chars = 7;
            if (element.value.length > max_chars) {
                element.value = element.value.substr(0, max_chars);
            }
        }

        function limitNine(element) {
            var max_chars = 9;
            if (element.value.length > max_chars) {
                element.value = element.value.substr(0, max_chars);
            }
        }


        $(document).on('focusout', '.specification-value', function () {
            var code = $(this).data('specification-code');
            var value = $(this).val();

            $.getJSON("/Product/SetSpecificationValue", { code: code, value: value }, function (data) {
                //do nothing
            });
        });

        $(document).ready(function () {
            $('#BrandCode').select2({
                placeholder: "Search Brand",
                minimumInputLength: 1,
                ajax: {
                    url: "/Api/GetBrandsSelect2",
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $.getJSON('/Product/GetCurrencyName/?brandCode=' + e.params.data.id, null, function (result) {
                    $('#CurrencyName').val(result.Currency);
                    $('input[name="CurrencyName"]').val(result.Currency);
                });
                $('input[name="BrandName"]').val(e.params.data.text);
            });

            $('#ProductLineCode').select2({
                placeholder: "Search ProductLine",
                ajax: {
                    url: "/Api/GetProductLinesSelect2",
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ProductLineName"]').val(e.params.data.text);
            });

            var category = $('#CategoryCode,#CategoryCode1');
            category.select2({
                placeholder: "Search Category",
                ajax: {
                    url: "/Api/GetCategoriesSelect2",
                    dataType: 'json',
                    delay: 300
                }
            }).on('select2:select', function (e) {
                $('.item-list').remove();
                $.getJSON("/Product/GetSpecificationListByCategoryCode?code=" + e.params.data.id, function (data) {
                    $.each(data.list, function (index, da) {
                        var newItem = "<tr data-specification-code=\"" + da.SpecificationCode + "\" class=\"item-list\"> \
                                                                                                                                                            <td> \
                                                                                                                                                                " + da.SpecificationName + " \
                                                                                                                                                            </td> \
                                                                                                                                                            <td> \
                                                                                                                                                                <input type=\"text\" class=\"form-control specification-value\" data-specification-code=\""+ da.SpecificationCode + "\"  data-specification-name=\"" + da.SpecificationName + "\" name=\"Value\"/> \
                                                                                                                                                            </td> \
                                                                                                                                                            \
                                                                                                                                                            </tr> ";
                        $('#Item_' + da.SpecificationCode).remove();
                        $('#specification-list1').append(newItem);
                        $('#specification-list2').append(newItem);
                    });
                    $('#CategoryName').val(e.params.data.text);
                });
            });

            $('#MeasurementCode').select2({
                placeholder: "Search Measurement",
                ajax: {
                    url: "/api/GetMeasurementsSelect2",
                    dataType: 'json',
                    delay: 300
                },
            }).on('select2:select', function (e) {
                $('#MeasurementName').val(e.params.data.text);
            });

            $('#VolumeCode').select2({
                placeholder: "Search Volume",
                ajax: {
                    url: "/api/GetVolumesSelect2",
                    dataType: 'json',
                    delay: 300
                },
            }).on('select2:select', function (e) {
                $('#VolumeName').val(e.params.data.text);
            });

            $('#WeightCode').select2({
                placeholder: "Search Weight",
                ajax: {
                    url: "/api/GetWeightsSelect2",
                    dataType: 'json',
                    delay: 300
                },
            }).on('select2:select', function (e) {
                $('#WeightName').val(e.params.data.text);
            });

            $('#CurrencyCode').select2({
                placeholder: "Search Currency",
                ajax: {
                    url: "/api/GetCurrencySelect2",
                    dataType: 'json',
                    delay: 300
                },
            }).on('select2:select', function (e) {
                $('#CurrencyName').val(e.params.data.text);
            });

            //$("#ShortDescription").focus(function () {
            //    if ($('#ModelName4').val() == "") {
            //        $('#ModelName4').val("xxxx");
            //    }
            //});
            $('#generateCode').on('click', function () {
                if (generateCode == false) {
                    generateCode = true;
                    $('#StockKeepingUnit').addClass('d-none');
                }
                else {
                    generateCode = false;
                    $('#StockKeepingUnit').removeClass('d-none');
                }
            });

            $('#FBrandCode').select2({
                placeholder: "Search Brand",
                ajax: {
                    url: "/Api/GetBrandsSelect2",
                    delay: 250,
                    dataType: 'json'
                },
                width: '100%',
                dropdownAutoWidth: true
            }).on('select2:select', function (e) {
                $('input[name="FBrandName"]').val(e.params.data.text);

            });

            $('#FProductLineCode').select2({
                placeholder: "Search ProductLine",
                ajax: {
                    url: "/Api/GetProductLinesSelect2",
                    delay: 250,
                    dataType: 'json'
                },
                width: '100%',
                dropdownAutoWidth: true
            }).on('select2:select', function (e) {
                $('input[name="FProductLineName"]').val(e.params.data.text);
            });

            $('#ProductCode').select2({
                placeholder: "Search Model",
                minimumInputLength: 1,
                ajax: {
                    url: "/Product/GetListSelect2",
                    delay: 50,
                    dataType: 'json'
                },
                width: '100%',
                dropdownAutoWidth: true
            }).on('select2:select', function (e) {
                $('input[name="ProductName"]').val(e.params.data.text);
            });

            $('#FCategoryCode').select2({
                placeholder: "Search Category",
                ajax: {
                    url: "/Api/GetCategoriesSelect2",
                    dataType: 'json',
                    delay: 300
                },
                width: '100%',
                dropdownAutoWidth: true
            }).on('select2:select', function (e) {
                $('#FCategoryName').val(e.params.data.text);
            });

            $('#MeasurementCode1').select2({
                placeholder: "Search",
                ajax: {
                    url: "/api/GetMeasurementsSelect2",
                    dataType: 'json',
                    delay: 300
                },
            }).on('select2:select', function (e) {
                $('#ServiceMeasurementName').val(e.params.data.text);
            });
        });


        $('#EstimatedPrice').on('keyup', function () {
            var originalPrice = $('#AcquisitionPrice').val();
            var marketPrice = $('#EstimatedPrice').val();
            var priceDifference = originalPrice - marketPrice;
            var markUp = Math.floor((priceDifference / originalPrice) * 100);
            $('#PriceDifferenceText').html('&#8369;' + priceDifference.toFixed(2));
            $('#PriceDifference').val(priceDifference.toFixed(2));
            $('#MarkupPercentage').val(markUp.toFixed(0));
        })

        $(document).ready(function () {
            //For Validation
            $('#submitBtn').on('click', function () {
                var isValidated = false;
                var requiredArr = [
                    'ProductLineCode',
                    'BrandCode',
                    'ShortDescription',
                    'MeasurementCode',
                    'UnitLevel',
                    'AcquisitionPrice',
                    'EstimatedPrice'

                ];
                isValidated = ValidateEmptyRequiredFiels(requiredArr);

                if (isValidated) {
                    //if ($('#ModelName4').val() == "xxxx") {
                    //    var modelName = $('#ModelName1').val() + "-" + $('#ModelName2').val() + "-" + $('#ModelName3').val();
                    //}
                    //else {
                    //    var modelName = $('#ModelName1').val() + "-" + $('#ModelName2').val() + "-" + $('#ModelName3').val() + "-" + $('#ModelName4').val();
                    //}
                    //$('#Name').val(modelName);
                    $('#ProductForm').submit();
                };
            });
        });
    </script>

    <script>
        //Weight
        function weightPoundGram(valNum) {
            var wgtpnds = document.getElementById("WeightPounds").value = valNum * 2.2046;
            wgtpnds += '';
            wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', '');
            wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', '');
            x = wgtpnds.split('.');
            format(x)
            $('#WeightPounds').val(x1);

            var wgtgram = document.getElementById("WeightGram").value = valNum * 1000;
            wgtgram += '';
            wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', '');
            wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', '');
            x = wgtgram.split('.');
            format(x)
            $('#WeightGram').val(x1);
        }
        function weightPoundKilogram(valNum) {
            var wgtpnds = document.getElementById("WeightPounds").value = valNum * 0.0022046;
            wgtpnds += '';
            wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', '');
            wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', ''); wgtpnds = wgtpnds.replace(',', '');
            x = wgtpnds.split('.');
            format(x)
            $('#WeightPounds').val(x1);

            var wgtkg = document.getElementById("WeightKiloGram").value = valNum / 1000;
            wgtkg += '';
            wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', '');
            wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', '');
            x = wgtkg.split('.');
            format(x)
            $('#WeightKiloGram').val(x1);
        }
        function weightGramKilogram(valNum) {
            var wgtgram = document.getElementById("WeightGram").value = valNum / 0.0022046;
            wgtgram += '';
            wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', '');
            wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', ''); wgtgram = wgtgram.replace(',', '');
            x = wgtgram.split('.');
            format(x)
            $('#WeightGram').val(x1);

            var wgtkg = document.getElementById("WeightKiloGram").value = valNum / 2.2046;
            wgtkg += '';
            wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', '');
            wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', ''); wgtkg = wgtkg.replace(',', '');
            x = wgtkg.split('.');
            format(x)
            $('#WeightKiloGram').val(x1);
        }
        //Length
        function lengthMMCMFT(valNum) {
            var lengmm = document.getElementById("LengthMilliMeter").value = valNum * 1000;
            lengmm += '';
            lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', '');
            lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', '');
            x = lengmm.split('.');
            format(x)
            $('#LengthMilliMeter').val(x1);

            var lengcm = document.getElementById("LengthCentiMeter").value = valNum / 0.01;
            lengcm += '';
            lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', '');
            lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', '');
            x = lengcm.split('.');
            format(x)
            $('#LengthCentiMeter').val(x1);

            var lengft = document.getElementById("LengthFeet").value = valNum * 3.2808;
            lengft += '';
            lengft = lengft.replace(',', ''); lengft = lengft.replace(',', ''); lengft = lengft.replace(',', '');
            lengft = lengft.replace(',', ''); lengft = lengft.replace(',', ''); lengft = lengft.replace(',', '');
            x = lengft.split('.');
            format(x)
            $('#LengthFeet').val(x1);

        }
        function lengthMCMFT(valNum) {
            //this.value = parseFloat(this.value).toFixed(2);
            var lengm = document.getElementById("LengthMeter").value = valNum / 1000;
            lengm += '';
            lengm = lengm.replace(',', ''); lengm = lengm.replace(',', ''); lengm = lengm.replace(',', '');
            lengm = lengm.replace(',', ''); lengm = lengm.replace(',', ''); lengm = lengm.replace(',', '');
            x = lengm.split('.');
            format(x)
            $('#LengthMeter').val(x1);

            var lengcm = document.getElementById("LengthCentiMeter").value = valNum / 10;
            lengcm += '';
            lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', '');
            lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', '');
            x = lengcm.split('.');
            format(x)
            $('#LengthCentiMeter').val(x1);

            var lengft = document.getElementById("LengthFeet").value = valNum / 304.8;
            lengft += '';
            lengft = lengft.replace(',', ''); lengft = lengft.replace(',', ''); lengft = lengft.replace(',', '');
            lengft = lengft.replace(',', ''); lengft = lengft.replace(',', ''); lengft = lengft.replace(',', '');
            x = lengft.split('.');
            format(x)
            $('#LengthFeet').val(x1);
        }
        function lengthMMMFT(valNum) {
            var lengmm = document.getElementById("LengthMilliMeter").value = valNum * 10;
            lengmm += '';
            lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', '');
            lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', '');
            x = lengmm.split('.');
            format(x)
            $('#LengthMilliMeter').val(x1);

            var lengm = document.getElementById("LengthMeter").value = valNum / 100;
            lengm += '';
            lengm = lengm.replace(',', ''); lengm = lengm.replace(',', ''); lengm = lengm.replace(',', '');
            lengm = lengm.replace(',', ''); lengm = lengm.replace(',', ''); lengm = lengm.replace(',', '');
            x = lengm.split('.');
            format(x)
            $('#LengthMeter').val(x1);

            var lengft = document.getElementById("LengthFeet").value = valNum * 0.032808;
            lengft += '';
            lengft = lengft.replace(',', ''); lengft = lengft.replace(',', ''); lengft = lengft.replace(',', '');
            lengft = lengft.replace(',', ''); lengft = lengft.replace(',', ''); lengft = lengft.replace(',', '');
            x = lengft.split('.');
            format(x)
            $('#LengthFeet').val(x1);
        }
        function lengthMMMCM(valNum) {
            var lengmm = document.getElementById("LengthMilliMeter").value = valNum * 304.8;
            lengmm += '';
            lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', '');
            lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', ''); lengmm = lengmm.replace(',', '');
            x = lengmm.split('.');
            format(x)
            $('#LengthMilliMeter').val(x1);

            var lengcm = document.getElementById("LengthCentiMeter").value = valNum / 0.032808;
            lengcm += '';
            lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', '');
            lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', ''); lengcm = lengcm.replace(',', '');
            x = lengcm.split('.');
            format(x)
            $('#LengthCentiMeter').val(x1);

            var lengm = document.getElementById("LengthMeter").value = valNum / 3.2808;
            lengm += '';
            lengm = lengm.replace(',', ''); lengm = lengm.replace(',', ''); lengm = lengm.replace(',', '');
            lengm = lengm.replace(',', ''); lengm = lengm.replace(',', ''); lengm = lengm.replace(',', '');
            x = lengm.split('.');
            format(x)
            $('#LengthMeter').val(x1);
        }
        //Width
        function WidthMMCMFT(valNum) {
            var widmm = document.getElementById("WidthMilliMeter").value = valNum * 1000;
            widmm += '';
            widmm = widmm.replace(',', ''); widmm = widmm.replace(',', ''); widmm = widmm.replace(',', '');
            widmm = widmm.replace(',', ''); widmm = widmm.replace(',', ''); widmm = widmm.replace(',', '');
            x = widmm.split('.');
            format(x)
            $('#WidthMilliMeter').val(x1);

            var widcm = document.getElementById("WidthCentiMeter").value = valNum / 0.01;
            widcm += '';
            widcm = widcm.replace(',', ''); widcm = widcm.replace(',', ''); widcm = widcm.replace(',', '');
            widcm = widcm.replace(',', ''); widcm = widcm.replace(',', ''); widcm = widcm.replace(',', '');
            x = widcm.split('.');
            format(x)
            $('#WidthCentiMeter').val(x1);

            var widft = document.getElementById("WidthFeet").value = valNum * 3.2808;
            widft += '';
            widft = widft.replace(',', ''); widft = widft.replace(',', ''); widft = widft.replace(',', '');
            widft = widft.replace(',', ''); widft = widft.replace(',', ''); widft = widft.replace(',', '');
            x = widft.split('.');
            format(x)
            $('#WidthFeet').val(x1);
        }
        function WidthMCMFT(valNum) {
            var widm = document.getElementById("WidthMeter").value = valNum / 1000;
            widm += '';
            widm = widm.replace(',', ''); widm = widm.replace(',', ''); widm = widm.replace(',', '');
            widm = widm.replace(',', ''); widm = widm.replace(',', ''); widm = widm.replace(',', '');
            x = widm.split('.');
            format(x)
            $('#WidthMeter').val(x1);

            var widcm = document.getElementById("WidthCentiMeter").value = valNum / 10;
            widcm += '';
            widcm = widcm.replace(',', ''); widcm = widcm.replace(',', ''); widcm = widcm.replace(',', '');
            widcm = widcm.replace(',', ''); widcm = widcm.replace(',', ''); widcm = widcm.replace(',', '');
            x = widcm.split('.');
            format(x)
            $('#WidthCentiMeter').val(x1);

            var widft = document.getElementById("WidthFeet").value = valNum / 304.8;
            widft += '';
            widft = widft.replace(',', ''); widft = widft.replace(',', ''); widft = widft.replace(',', '');
            widft = widft.replace(',', ''); widft = widft.replace(',', ''); widft = widft.replace(',', '');
            x = widft.split('.');
            format(x)
            $('#WidthFeet').val(x1);
        }
        function WidthMMMFT(valNum) {
            var widmm = document.getElementById("WidthMilliMeter").value = valNum * 10;
            widmm += '';
            widmm = widmm.replace(',', ''); widmm = widmm.replace(',', ''); widmm = widmm.replace(',', '');
            widmm = widmm.replace(',', ''); widmm = widmm.replace(',', ''); widmm = widmm.replace(',', '');
            x = widmm.split('.');
            format(x)
            $('#WidthMilliMeter').val(x1);

            var widm = document.getElementById("WidthMeter").value = valNum / 100;
            widm += '';
            widm = widm.replace(',', ''); widm = widm.replace(',', ''); widm = widm.replace(',', '');
            widm = widm.replace(',', ''); widm = widm.replace(',', ''); widm = widm.replace(',', '');
            x = widm.split('.');
            format(x)
            $('#WidthMeter').val(x1);

            var widft = document.getElementById("WidthFeet").value = valNum * 0.032808;
            widft += '';
            widft = widft.replace(',', ''); widft = widft.replace(',', ''); widft = widft.replace(',', '');
            widft = widft.replace(',', ''); widft = widft.replace(',', ''); widft = widft.replace(',', '');
            x = widft.split('.');
            format(x)
            $('#WidthFeet').val(x1);
        }
        function WidthMMMCM(valNum) {
            var widmm = document.getElementById("WidthMilliMeter").value = valNum * 304.8;
            widmm += '';
            widmm = widmm.replace(',', ''); widmm = widmm.replace(',', ''); widmm = widmm.replace(',', '');
            widmm = widmm.replace(',', ''); widmm = widmm.replace(',', ''); widmm = widmm.replace(',', '');
            x = widmm.split('.');
            format(x)
            $('#WidthMilliMeter').val(x1);

            var widcm = document.getElementById("WidthCentiMeter").value = valNum / 0.032808;
            widcm += '';
            widcm = widcm.replace(',', ''); widcm = widcm.replace(',', ''); widcm = widcm.replace(',', '');
            widcm = widcm.replace(',', ''); widcm = widcm.replace(',', ''); widcm = widcm.replace(',', '');
            x = widcm.split('.');
            format(x)
            $('#WidthCentiMeter').val(x1);

            var widm = document.getElementById("WidthMeter").value = valNum / 3.2808;
            widm += '';
            widm = widm.replace(',', ''); widm = widm.replace(',', ''); widm = widm.replace(',', '');
            widm = widm.replace(',', ''); widm = widm.replace(',', ''); widm = widm.replace(',', '');
            x = widm.split('.');
            format(x)
            $('#WidthMeter').val(x1);
        }
        //Height
        function HeightMMCMFT(valNum) {

            var hgtmm = document.getElementById("HeightMilliMeter").value = valNum * 1000;
            hgtmm += '';
            hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', '');
            hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', '');
            x = hgtmm.split('.');
            format(x)
            $('#HeightMilliMeter').val(x1);


            var hgtcm = document.getElementById("HeightCentiMeter").value = valNum / 0.01;
            hgtcm += '';
            hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', '');
            hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', '');
            x = hgtcm.split('.');
            format(x)
            $('#HeightCentiMeter').val(x1);


            var hgtft = document.getElementById("HeightFeet").value = valNum * 3.2808;
            hgtft += '';
            hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', '');
            hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', '');
            x = hgtft.split('.');
            format(x)
            $('#HeightFeet').val(x1);


        }
        function HeightMCMFT(valNum) {
            var hgtm = document.getElementById("HeightMeter").value = valNum / 1000;
            hgtm += '';
            hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', '');
            hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', '');
            x = hgtm.split('.');
            format(x)
            $('#HeightMeter').val(x1);

            var hgtcm = document.getElementById("HeightCentiMeter").value = valNum / 10;
            hgtcm += '';
            hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', '');
            hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', '');
            x = hgtcm.split('.');
            format(x)
            $('#HeightCentiMeter').val(x1);

            var hgtft = document.getElementById("HeightFeet").value = valNum / 304.8;
            hgtft += '';
            hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', '');
            hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', '');
            x = hgtft.split('.');
            format(x)
            $('#HeightFeet').val(x1);
        }
        function HeightMMMFT(valNum) {
            var hgtmm = document.getElementById("HeightMilliMeter").value = valNum * 10;
            hgtmm += '';
            hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', '');
            hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', '');
            x = hgtmm.split('.');
            format(x)
            $('#HeightMilliMeter').val(x1);

            var hgtm = document.getElementById("HeightMeter").value = valNum / 100;
            hgtm += '';
            hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', '');
            hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', '');
            x = hgtm.split('.');
            format(x)
            $('#HeightMeter').val(x1);

            var hgtft = document.getElementById("HeightFeet").value = valNum * 0.032808;
            hgtft += '';
            hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', '');
            hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', ''); hgtft = hgtft.replace(',', '');
            x = hgtft.split('.');
            format(x)
            $('#HeightFeet').val(x1);
        }
        function HeightMMMCM(valNum) {
            var hgtmm = document.getElementById("HeightMilliMeter").value = valNum * 304.8;
            hgtmm += '';
            hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', '');
            hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', ''); hgtmm = hgtmm.replace(',', '');
            x = hgtmm.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1))
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            $('#HeightMilliMeter').val(x1);

            var hgtcm = document.getElementById("HeightCentiMeter").value = valNum / 0.032808;
            hgtcm += '';
            hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', '');
            hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', ''); hgtcm = hgtcm.replace(',', '');
            x = hgtcm.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1))
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            $('#HeightCentiMeter').val(x1);

            var hgtm = document.getElementById("HeightMeter").value = valNum / 3.2808;
            hgtm += '';
            hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', '');
            hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', ''); hgtm = hgtm.replace(',', '');
            x = hgtm.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1))
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
            $('#HeightMeter').val(x1);
        }

        function format(x) {
            x1 = x[0];
            x2 = x.length > 1 ? '.' + x[1] : '';
            var rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1))
                x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }

        function readURL(input) {
            //alert(input.alt);
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                $("#ImageUrl").removeClass('d-none');
                reader.onload = function (e) {
                    $('#' + input.alt)
                        .attr('src', e.target.result)
                };

                reader.readAsDataURL(input.files[0]);
            }
            else {
                var img = input.value;
                $('#' + input.alt).attr('src', img);
            }
        }

        $(function () {
            var regExp = /[a-z]/i;
            $('#HeightMeter').on('keydown keyup', function (e) {
                var value = String.fromCharCode(e.which) || e.key;

                // No letters
                if (regExp.test(value)) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        $(function () {
            var regExp = /[a-z]/i;
            $('#WidthMeter').on('keydown keyup', function (e) {
                var value = String.fromCharCode(e.which) || e.key;

                // No letters
                if (regExp.test(value)) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        $(function () {
            var regExp = /[a-z]/i;
            $('#LengthMeter').on('keydown keyup', function (e) {
                var value = String.fromCharCode(e.which) || e.key;

                // No letters
                if (regExp.test(value)) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        $(function () {
            var regExp = /[a-z]/i;
            $('#WeightKiloGram').on('keydown keyup', function (e) {
                var value = String.fromCharCode(e.which) || e.key;

                // No letters
                if (regExp.test(value)) {
                    e.preventDefault();
                    return false;
                }
            });
        });

        $("#IsVirtualItem").on("change", function () {
            if ($("#IsVirtualItem").prop('checked') == true) {
                $("#WeightGram").val(0);
                $("#WeightGram").prop('readonly', true);
                $("#WeightKiloGram").val(0);
                $("#WeightKiloGram").prop('readonly', true);
                $("#WeightPounds").val(0);
                $("#WeightPounds").prop('readonly', true);

                $("#LengthMeter").val(0);
                $("#LengthMeter").prop('readonly', true);
                $("#LengthMilliMeter").val(0);
                $("#LengthMilliMeter").prop('readonly', true);
                $("#LengthCentiMeter").val(0);
                $("#LengthCentiMeter").prop('readonly', true);
                $("#LengthFeet").val(0);
                $("#LengthFeet").prop('readonly', true);

                $("#WidthMeter").val(0);
                $("#WidthMeter").prop('readonly', true);
                $("#WidthMilliMeter").val(0);
                $("#WidthMilliMeter").prop('readonly', true);
                $("#WidthCentiMeter").val(0);
                $("#WidthCentiMeter").prop('readonly', true);
                $("#WidthFeet").val(0);
                $("#WidthFeet").prop('readonly', true);

                $("#HeightMeter").val(0);
                $("#HeightMeter").prop('readonly', true);
                $("#HeightMilliMeter").val(0);
                $("#HeightMilliMeter").prop('readonly', true);
                $("#HeightCentiMeter").val(0);
                $("#HeightCentiMeter").prop('readonly', true);
                $("#HeightFeet").val(0);
                $("#HeightFeet").prop('readonly', true);

            }
            else {
                $("#WeightGram").val('');
                $("#WeightGram").prop('readonly', false);
                $("#WeightKiloGram").val('');
                $("#WeightKiloGram").prop('readonly', false);
                $("#WeightPounds").val('');
                $("#WeightPounds").prop('readonly', false);

                $("#LengthMeter").val('');
                $("#LengthMeter").prop('readonly', false);
                $("#LengthMilliMeter").val('');
                $("#LengthMilliMeter").prop('readonly', false);
                $("#LengthCentiMeter").val('');
                $("#LengthCentiMeter").prop('readonly', false);
                $("#LengthFeet").val('');
                $("#LengthFeet").prop('readonly', false);

                $("#WidthMeter").val('');
                $("#WidthMeter").prop('readonly', false);
                $("#WidthMilliMeter").val('');
                $("#WidthMilliMeter").prop('readonly', false);
                $("#WidthCentiMeter").val('');
                $("#WidthCentiMeter").prop('readonly', false);
                $("#WidthFeet").val('');
                $("#WidthFeet").prop('readonly', false);

                $("#HeightMeter").val('');
                $("#HeightMeter").prop('readonly', false);
                $("#HeightMilliMeter").val('');
                $("#HeightMilliMeter").prop('readonly', false);
                $("#HeightCentiMeter").val('');
                $("#HeightCentiMeter").prop('readonly', false);
                $("#HeightFeet").val('');
                $("#HeightFeet").prop('readonly', false);
            }
        });
    </script>
}

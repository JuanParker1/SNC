@model ShopNow.ViewModels.FMCGListViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "FMCG List";
}
<title>ShopNow | @ViewBag.Title</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>

<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-3">
            <h5 class="mt-1 text-uppercase" style="letter-spacing:1px">@ViewBag.Title</h5>
        </div>
        <div class="col-md-6">
            <form method="get" action="/Product/FMCGList">
                <div class="row">
                    <div class="col-md-8">
                        <select id="select-shop" class="form-control" name="ShopId">
                            @if (Model.ShopId != 0)
                            {
                                <option value="@Model.ShopId">@Model.ShopName</option>
                            }
                        </select>
                        <input type="hidden" name="ShopName" />
                    </div>
                    <div class="col-md-3">
                        <input type="submit" class="btn btn-info mr-3" value="Go" />
                        <a href="/Product/FMCGList" class="btn btn-info">Clear</a>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-md-3 text-right">
            <a href="/Product/FMCGCreate"><span class="fa fa-plus"></span> FMCG</a>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model.ListItems).Columns(columns =>
               {
               columns.Add(b => b.Name).Titled("Name").Encoded(false).Sanitized(false).RenderValueAs(model => Html.ActionLink(model.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeLong(model.Id) }).ToHtmlString()).Filterable(true).SetWidth(20);
               columns.Add(b => b.CategoryName).Titled("Category Name").Filterable(true).SetWidth(15);
               columns.Add(b => b.ShopName).Titled("Type").Filterable(true).SetWidth(20);
               columns.Add(b => b.Percentage).Titled("Discount %").Filterable(true).SetWidth(10);
               columns.Add().Encoded(false).Sanitized(false).Titled("Action").SetWidth(5)
               .RenderValueAs(o => @<div>
                        <a href="~/Product/FMCGEdit?id=@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-info mr-5"><i class="fa fa-edit fa-lg"></i></a>
                        <a href="javascript:void(0)" data-id="@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-danger btnDelete" redirectPage=3><i class="fa fa-trash fa-lg"></i></a>
                    </div>);
}).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script>
        $(document).ready(function () {

            $('#select-shop').select2({
                placeholder: "Search Shop",
                ajax: {
                    url: "/Product/GetShopSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ShopName"]').val(e.params.data.text);
            });

            $(".btnDelete").click(function () {
                var id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Product/Delete", { id: id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });
        });
    </script>
}
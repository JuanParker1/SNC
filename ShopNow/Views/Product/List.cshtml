@model ShopNow.ViewModels.ProductItemListViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "Item List";
}
<title>ShopNow | Item List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<link href="~/Content/switch.css" rel="stylesheet" />
<div class="container-fluid">
    <div class="row mb-3">
        <div class="col-md-3">
            <h5 class="mt-1 text-success" style="letter-spacing:1px">SHOPWISE ITEM LIST</h5>
        </div>
        <div class="col-md-5">
            <form method="get" action="/Product/List">
                <div class="row">
                    <div class="col-md-8">
                        <select id="ShopId" class="form-control" name="ShopId">
                            @if (Model.ShopId != 0)
                            {
                                <option value="@Model.ShopId">@Model.ShopName</option>
                            }
                        </select>
                        <input type="hidden" name="ShopName" value="@Model.ShopName" />
                    </div>
                    <div class="col-md-4">
                        <input type="submit" class="btn btn-info mr-3" value="Go" />
                        <a href="/Product/List" class="btn btn-info">Clear</a>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-md-4 text-right">
            <a href="~/Product/FoodCreate" target="_self" class="ml-2"><span class="fa fa-plus"></span> Dish</a>
            <a href="~/Product/FMCGCreate" target="_self" class="ml-2"><span class="fa fa-plus"></span> FMCG</a>
            <a href="~/Product/MedicalCreate" target="_self" class="ml-2"><span class="fa fa-plus"></span> Medicine</a>
            <a href="~/Product/ElectronicCreate" target="_self" class="ml-2"><span class="fa fa-plus"></span> Electronics</a>
        </div>
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model.ListItems).Columns(columns =>
               {
               columns.Add(c => c.ProductTypeName).Titled("Item Type").Filterable(true).SetWidth(5);
               columns.Add(c => c.Name).Titled("Name").Encoded(false).Sanitized(false).RenderValueAs(model => Html.ActionLink(model.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeLong(model.Id) }).ToHtmlString()).Filterable(true).SetWidth(20);
               columns.Add(c => c.CategoryName).Titled("Category Name").Filterable(true).SetWidth(12);/*.RenderValueAs(c=> c.CategoryName == null ? "N/A" : c.CategoryName);*/
               columns.Add(c => c.BrandName).Titled("Brand Name").Filterable(true).SetWidth(18);/*.RenderValueAs(c => c.BrandName == null ? "N/A" : c.BrandName);*/
               columns.Add(c => c.ShopName).Titled("Shop Name").Filterable(true).SetWidth(10);
               columns.Add(c => c.Percentage).Titled("Discount %").Filterable(true).SetWidth(10);
               columns.Add().Encoded(false).Sanitized(false)
                  .RenderValueAs(s => new HtmlString("<label class='switch'> <input type='checkbox' value='" + s.IsOnline + "' Id='Id_" + s.Id + "' class='CheckOnline' data-id='" + s.Id + "'><span class='slider round'></span></label>")).Titled("IsOnline").SetWidth(5);
               columns.Add().Encoded(false).Sanitized(false).Titled("Action").SetWidth(30)
               .RenderValueAs(o => @<div>
                        @if (o.Status == 0)
                         {
                            <a href="javascript:void(0)" data-id="@o.Id" class="btn btn-sm btn-secondary mr-2 btnInActive" style="vertical-align:text-bottom">InActive</a>
                         }
                         else
                         {
                            <a href="javascript:void(0)" data-id="@o.Id" class="btn btn-sm btn-success mr-2 btnActive" style="vertical-align:text-bottom"> Active</a>
                         }
                       @if (o.ProductTypeId == 1)
                        {
                           <a href="~/Product/FoodEdit?Id=@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-info mr-2"><i class="fa fa-edit fa-2x"></i></a>
                        }
                       else if (@o.ProductTypeId == 2)
                       {
                           <a href="~/Product/FMCGEdit?Id=@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-info mr-2"><i class="fa fa-edit fa-2x"></i></a>
                       }
                       else if (@o.ProductTypeId == 3)
                       {
                           <a href="~/Product/MedicalEdit?Id=@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-info mr-2"><i class="fa fa-edit fa-2x"></i></a>
                       }
                       else if (@o.ProductTypeId == 4)
                       {
                           <a href="~/Product/ElectronicEdit?Id=@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-info mr-2"><i class="fa fa-edit fa-2x"></i></a>
                       }
                       else
                       {
                           <a href="~/Product/ServiceEdit?Id=@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-info mr-2"><i class="fa fa-edit fa-2x"></i></a>
                       }
                           <a href="javascript:void(0)" data-id="@ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id)" class="text-danger btnDelete"><i class="fa fa-trash fa-2x"></i></a> 
                   </div> );
                }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@*Image Modal*@

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <span class="close" data-dismiss="modal">&times;</span>
        <a href="~/Home/ImageDenied">
            <img class="modal-content" id="myImage">
        </a>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script>
        $(document).ready(function () {

            $('#ShopId').select2({
                placeholder: "Search Shop",
                ajax: {
                    url: "/Product/GetActiveShopSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ShopName"]').val(e.params.data.text);
            });

            $('table tbody tr').each(function () {
                var $this = $(this).find(".CheckOnline");
                if ($this.val() == 'True')
                    $this.prop('checked', true);
                else
                    $this.prop('checked', false);
            });

            $('.CheckOnline').on('click', function () {
                var id = $(this).data('id');
                if ($(this).is(':checked') == true) {
                    $.post('/Product/UpdateProductOnline', { Id: id, isOnline: true }, function () { });
                }
                else {
                    $.post('/Product/UpdateProductOnline', { Id: id, isOnline: false }, function () { });
                }
            });

            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "Delete all ShopItems mapping to this MasterItems. You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Product/Delete", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

            $(".btnInActive").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to InActive?",
                    // text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, InActive it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Product/InActive", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

            $(".btnActive").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to Active?",
                    // text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Active it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Product/Active", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

            //$("#btnFilter").click(function () {
            //    var code = $("#ShopCode").val();
            //    if (code == null || code == "") {
            //        swal("Notice!", "Please Select Shop Name!", "warning");
            //    } else {
            //        window.location.href = "/Product/List/?shopcode=" + code;
            //    }
            //});

            //$("#btnClearFilter").click(function () {
            //    window.location.href = "/Product/List";
            //});
        });
    </script>
}
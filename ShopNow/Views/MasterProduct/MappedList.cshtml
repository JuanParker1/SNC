@model ShopNow.ViewModels.MasterProductListViewModel
@{
    ViewBag.Title = "Mapped List";
}
<title>ShopNow | Mapped List</title>

<div class="container-fluid">
    <div class="row mb-2">
        <div class="col-md-2">
            <h5 class="text-success" style="letter-spacing:1px">Mapped List</h5>
        </div>
        <div class="col-md-2">
            <div class="mb-1 data-search">
            </div>
        </div>
        <div class="col-md-8 text-right">
            <a href="~/MasterProduct/ItemMapping" target="_blank"> Item Mapping</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 mx-auto">
            <div class="card mb-3">
                <div class="card-body">
                    <div class="form-group row">
                        <div class="table-responsive">
                            <table class="table table-borderless table-striped table-condensed" id="MappedList">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th class="text-nowrap">Shop Product Name</th>
                                        <th>Product Name</th>
                                        <th>Product Type</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.MappedLists)
                                    {
                                        <tr>
                                            <td></td>
                                            <td class="text-nowrap">@item.Name</td>
                                            <td>@item.MasterProductName</td>
                                            <td>@item.ProductTypeName</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->

    <script>
        $(document).ready(function () {

            $('#ShopId').select2({
                placeholder: "Search Shop",
                ajax: {
                    url: "/MasterProduct/GetShopSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ShopName"]').val(e.params.data.text);
            });

            var t = $('#MappedList').DataTable({
                "dom": "<'row'<'col-sm-6'f>>" +
                    "<'row'<'col-sm-5'i><'col-sm-3'l><'col-sm-4'p>>" +
                    "<'row'<'col-sm-12'tr>>",
                "bPaginate": false,
                //"scrollY": 400,
                "paging": true,
                "lengthMenu": [[10, 20, 50, 100, -1], [10, 20, 50, 100, "ALL"]],
                "pageLength": 10,
                initComplete: function (settings, json) {
                    $('.index input').remove();
                    $('.action-btn input').remove();
                    $('.dataTables_filter input').appendTo('.data-search');
                    $('.dataTables_filter label').remove();
                    $('.data-search input').attr('placeholder', 'Quick Search');
                    $('.data-search input').addClass('form-control');
                    $('.data-search input').removeClass('form-control-sm');
                },
            });

            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

        });
    </script>
}

@*@model IEnumerable<ShopNow.Models.Product>
@using GridMvc.Html;
@{
    ViewBag.Title = "Mapped List";
}
<title>ShopNow | Mapped List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>

<div class="container-fluid">
    <div class="row mb-2">
        <div class="col-md-3">
            <h5 class="text-success" style="letter-spacing:1px">MAPPED PRODUCT LIST</h5>
        </div>
        <div class="col-md-2">
            <div class="mb-1 data-search">
            </div>
        </div>
        <div class="col-md-7 text-right">
            <a href="~/MasterProduct/ItemMapping" target="_blank"> Item Mapping</a>
        </div>
    </div>

    @Html.Grid(Model).Columns(columns =>
{
   columns.Add(c => c.Name).Titled("Shop Product Name").Filterable(true).SetWidth(30);
   columns.Add(c => c.MasterProductName).Titled("Product Name").Filterable(true).SetWidth(30);
   columns.Add(c => c.ProductType).Titled("Product Type").Filterable(true).SetWidth(30);
   columns.Add()
.Encoded(false)
.Sanitized(false)
.RenderValueAs(c => Html.ActionLink("Edit", "ItemMappingUpdate", new { code = @ShopNow.Helpers.AdminHelpers.ECode(c.Code) }, new { @class = "btn btn-sm btn-warning" }).ToHtmlString()).Titled("Action").SetWidth(20);
}).WithPaging(10).Sortable(true)

</div>*@

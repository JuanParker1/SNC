@model IEnumerable<ShopNow.ViewModels.CustomerListViewModel.CustomerList>
@using GridMvc.Html
@{
    ViewBag.Title = "Customer List";
}
<title>ShopNow | Customer List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<style>
    table > thead > tr > th:first-child {
        padding: 12px 6px;
    }
    table > thead > tr > th:last-child {
        padding: 12px 6px;
    }
</style>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <h5 class="text-success" style="letter-spacing:1px">CUSTOMER LIST</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card mb-3 shadow">
                <div class="card-body">
                    @Html.Grid(Model).Columns(columns =>
                    {
                       columns.Add(c => c.No).Titled("Sl.No").Filterable(false).SetWidth(5);
                       columns.Add(b => b.Name).RenderValueAs(o => Html.ActionLink(o.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id) }).ToHtmlString()).Titled("Name").Encoded(false).Sanitized(false).Filterable(true).SetWidth(15);
                     //columns.Add(b => b.Name).Titled("Name").RenderValueAs(o=> Html.ActionLink(o.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)}).ToHtmlString()).Encoded(false).Sanitized(false).Filterable(true).SetWidth(15);
                       columns.Add(b => b.PhoneNumber).Titled("Phone No").Filterable(true).SetWidth(10);
                       columns.Add(b => b.AlternateNumber).Titled("Alternate No").Filterable(true).SetWidth(10);
                       columns.Add(b => b.Address).Titled("Address").Filterable(true).SetWidth(20);
                       columns.Add(b => b.DistrictName).Titled("District Name").Filterable(true).SetWidth(10);
                       columns.Add(b => b.AppInfo).Titled("App Info").Filterable(true).SetWidth(10);
                       columns.Add(b => b.DateEncoded).Titled("Date").Filterable(true).SetWidth(10).Format("{0:dd-MM-yyyy hh:mm }");
                       columns.Add().Encoded(false).Sanitized(false).Titled("Action").Filterable(false).SetWidth(10)
                      .RenderValueAs(o => @<div>
                        <a href="~/Customer/Edit?id=@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)" class="text-info mr-2"><i class="fa fa-edit fa-lg"></i></a>
                        <a href="javascript:void(0)" data-id="@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)" class="text-danger btnDelete"><i class="fa fa-trash fa-lg"></i></a>
                      </div>);
                    }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Customer/Delete", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });
        });
    </script>
}
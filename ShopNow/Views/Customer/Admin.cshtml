@model IEnumerable<ShopNow.ViewModels.CustomerListViewModel.CustomerList>
@using GridMvc.Html
@{
    ViewBag.Title = "Admin List";
}
<title>ShopNow | Admin List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<div class="container-fluid">
    <div class="row my-2">
        <div class="col-md-6">
            <h4 class="text-success" style="letter-spacing:1px">Admin List</h4>
        </div>
        <div class="col-md-6 text-right">
            <a data-toggle="modal" data-target="#createModal" href="createModal"><span class="fa fa-plus"></span> New Admin</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-body">
                    @Html.Grid(Model).Columns(columns =>
{
columns.Add().RenderValueAs(o => Html.ActionLink(o.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id) }).ToHtmlString()).Titled("Name").Encoded(false).Sanitized(false).Filterable(true).SetWidth(10);
columns.Add(c => c.PhoneNumber).Titled("Phone Number").Filterable(true).SetWidth(10);
columns.Add(c => c.Address).Titled("Address").Filterable(true).SetWidth(10);
columns.Add(c => c.DistrictName).Titled("District").Filterable(true).SetWidth(10);
columns.Add(c => c.StateName).Titled("State").Filterable(true).SetWidth(10);
columns.Add().Encoded(false).Sanitized(false).Titled("Action").Filterable(false).SetWidth(20).RenderValueAs(c => @<div><button type="button" class="btn btn-sm btn-danger Remove" data-id="@c.Id">Remove</button></div>);
}).WithPaging(20).Sortable(true)

                </div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-info">
                <h5 class="modal-title" id="createModalLabel">New Admin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="Code">Admin Name</label>
                    </div>
                    <div class="col-md-8">
                        <select class="form-control" name="Code" id="Code" style="width:100%;"></select>
                        <input type="hidden" name="Name" id="Name" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" id="Create" name="Create" value="Save" class="btn btn-success float-right Save" />
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script src="~/Scripts/ValidateRequiredFields.js"></script>
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {

            $('#Code').select2({
                placeholder: "Search Admin",
                ajax: {
                    url: "/Customer/GetCustomerSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="Name"]').val(e.params.data.text);
            });

            $('#Create').on('click', function () {
                var code = $('#Code').val();
                var isValidate = false;
                var requiredArr = [
                    'Code'
                ];
                isValidate = ValidateEmptyRequiredFiels(requiredArr);
                if (isValidate) {
                    $.getJSON("/Customer/Save?code=" + code, function (data) {
                        if (data.IsAdded == true) {
                            swal({
                                title: data.message,
                                text: "",
                                type: "success"
                            }, function () {
                                window.location.href = "/Customer/Admin";
                            });
                        } else if (data.message1 != null || data.message1 != "") {
                            swal(data.message1, "", "warning");
                        }
                    });
                }
            });

            $('.Remove').on('click', function () {
                //var code = $('#Code').val();
                var code = $(this).attr('data-id');
                $.getJSON("/Customer/Remove?code=" + code, function (data) {
                    if (data.IsAdded == true) {
                        swal({
                            title: "Removed Successfully",
                            text: "",
                            type: "success"
                        }, function () {
                            window.location.href = "/Customer/Admin";
                        });
                    }
                });
            });

        });
    </script>
}


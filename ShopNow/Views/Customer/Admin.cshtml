@model IEnumerable<ShopNow.ViewModels.CustomerListViewModel.CustomerList>
@using GridMvc.Html
@{
    ViewBag.Title = "Admin List";
}
<title>SNOWCH | Admin List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<div class="container-fluid">
    <div class="row my-2">
        <div class="col-md-6">
            <h5 class="text-success" style="letter-spacing:1px">ADMIN LIST</h5>
        </div>
        <div class="col-md-6 text-right">
            <a data-toggle="modal" data-target="#createStaffModal" href="createStaffModal"><span class="fa fa-plus"></span> New Staff</a>
            <a data-toggle="modal" data-target="#createModal" href="createModal" class="ml-3"><span class="fa fa-plus"></span> New Admin</a>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-body">                  
                    @Html.Grid(Model).Columns(columns =>
               {
                columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o => Html.ActionLink(o.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id) }).ToHtmlString()).Titled("Name").Filterable(true).SetWidth(10);
               //columns.Add(c => c.Name).Titled("Name").Filterable(true).SetWidth(10);
               columns.Add(c => c.PhoneNumber).Titled("Phone Number").Filterable(true).SetWidth(10);
               columns.Add(c => c.Address).Titled("Address").Filterable(true).SetWidth(30);
               columns.Add(c => c.DistrictName).Titled("District").Filterable(true).SetWidth(10);
               columns.Add(c => c.StateName).Titled("State").Filterable(true).SetWidth(10);
               columns.Add().Encoded(false).Sanitized(false).Titled("Action").Filterable(false).SetWidth(10)
               .RenderValueAs(c => @<div>
                    <a data-toggle="modal" data-target="#updateModal" href="updateModal" data-password="@c.CurrentPassword" data-id=@c.Id class="text-info Update"><i class="fa fa-edit fa-lg"></i></a>
                    <a href="javascript:void(0)" data-id=@c.Id class="text-danger btnDelete ml-3"><i class="fa fa-trash fa-lg"></i></a>
                    </div>);
                  }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createModal" role="dialog" aria-labelledby="createModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-info">
                <h5 class="modal-title" id="createModalLabel">New Admin</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="Id">Admin Name</label>
                    </div>
                    <div class="col-md-8">
                        <select class="form-control" name="Id" id="Id"></select>
                        <input type="hidden" name="Name" id="Name" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" id="Create" name="Create" value="Save" class="btn btn-success float-right Save" />
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="updateModal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-info">
                <h5 class="modal-title" id="updateModalLabel">Update Password</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="CurrentPassword">Current Password</label>
                    </div>
                    <div class="col-md-8">
                        <input type="text" class="form-control" name="CPId" id="CPId" readonly />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="Password">New Password</label>
                    </div>
                    <div class="col-md-8">
                        <input type="password" class="form-control" name="Password" id="Password" required />
                        <input type="hidden" name="PId" id="PId" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" id="btnUpdate" value="Update" class="btn btn-success float-right" />
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createStaffModal" role="dialog" aria-labelledby="createStaffModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-info">
                <h5 class="modal-title" id="createStaffModalLabel">New Staff</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="StaffName">Staff Name</label>
                    </div>
                    <div class="col-md-8">
                        <input type="text" name="StaffName" id="StaffName" class="form-control" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="StaffId">UserName</label>
                    </div>
                    <div class="col-md-8">
                        <input type="text" name="StaffId" id="StaffId" class="form-control" />
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-4">
                        <label class="control-label text-secondary font-weight-bold" for="StaffPassword">Password</label>
                    </div>
                    <div class="col-md-8">
                        <input type="text" name="StaffPassword" id="StaffPassword" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" id="StaffCreate" name="StaffCreate" value="Save" class="btn btn-success float-right Save" />
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script src="~/Scripts/ValidateRequiredFields.js"></script>
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {

            $('#Id').select2({
                placeholder: "Search Admin",
                width: '100%',
                ajax: {
                    url: "/Customer/GetCustomerSelect2",
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="Name"]').val(e.params.data.text);
            });

            $('#Create').on('click', function () {
                var Id = $('#Id').val();
                var isValidate = false;
                var requiredArr = [
                    'Id'
                ];
                isValidate = ValidateEmptyRequiredFiels(requiredArr);
                if (isValidate) {
                    $.getJSON("/Customer/Save?Id=" + Id, function (data) {
                        if (data.IsAdded == true) {
                            swal({
                                title: data.message,
                                text: "",
                                type: "success"
                            }, function () {
                                window.location.href = "/Customer/Admin";
                            });
                        } else if (data.message1 != null || data.message1 != "") {
                            swal(data.message1, "Already Exist", "warning");
                        }
                    });
                }
            });

            //$('.Remove').on('click', function () {
            //    //var Id = $('#Id').val();
            //    var Id = $(this).attr('data-id');
            //    $.getJSON("/Customer/Remove?Id=" + Id, function (data) {
            //        if (data.IsAdded == true) {
            //            swal({
            //                title: "Removed Successfully",
            //                text: "",
            //                type: "success"
            //            }, function () {
            //                window.location.href = "/Customer/Admin";
            //            });
            //        }
            //    });
            //});

            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/Customer/Remove", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

            $(".Update").on('click', function () {               
                var code = $(this).data('id');
                var password = $(this).data('password');
                $("#PId").val(code);
                $("#CPId").val(password);
            });

            $("#btnUpdate").on('click', function () {
                var id = $("#PId").val();
                var password = $("#Password").val();
                if (password != null || password == "") {
                    $.getJSON("/Customer/UpdatePassword", { id: id, password: password }, function (data) {
                        if (data == true) {
                            swal({
                                title: "Password Updated successfully!",
                                text: "",
                                type: "success"
                            }, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
                else {
                    swal("Password Empty", "Please enter your password!", "warning");
                }
            });

            $('#StaffCreate').on('click', function () {
                var StaffName = $('#StaffName').val();
                var StaffId = $('#StaffId').val();
                var StaffPassword = $('#StaffPassword').val();
                var isValidate = false;
                var requiredArr = [
                    'StaffName',
                    'StaffId',
                    'StaffPassword'
                ];
                isValidate = ValidateEmptyRequiredFiels(requiredArr);
                if (isValidate) {
                    $.getJSON("/Customer/StaffCreate?StaffName=" + StaffName + "&StaffId=" + StaffId + "&StaffPassword=" + StaffPassword, function (data) {
                        if (data.IsAdded == true) {
                            swal({
                                title: data.message,
                                text: "",
                                type: "success"
                            }, function () {
                                window.location.href = "/Customer/Admin";
                            });
                        } else if (data.message1 != null || data.message1 != "") {
                            swal(data.message1, "UserName Already Exist", "warning");
                        }
                    });
                }
            });
         });
    </script>
}


@model IEnumerable<ShopNow.ViewModels.CartListViewModel.CustomerNotPickupList>
@using GridMvc.Html
@{
    ViewBag.Title = "Customer Not Pickup";
}
<title>ShopNow | Customer Not Pickup Order </title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<div class="container-fluid">
    <div class="row my-2">
        <div class="col-md-4">
            <h5 class="text-success" style="letter-spacing:1px">Customer Not Pickup Order List</h5>
        </div>
        <div class="col-md-3">
            <select name="ShopId" id="ShopId" class="form-control"></select>
            <input type="hidden" name="ShopName" id="ShopName" />
        </div>
        <div class="col-md-1">
            <input type="button" class="form-control btn btn-sm btn-success" name="Filter" id="Filter" value="Filter" />
        </div>
        <div class="col-md-4 text-right">
            <a href="~/Cart/List" class="ml-auto" target="_self"><span class="fa fa-bars"></span> New Order List</a>
        </div>
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model).Columns(columns =>
               {
                   columns.Add(c => c.No).Titled("Sl.No").Filterable(false).SetWidth(1);
                   columns.Add(c => c.OrderNumber).Titled("OrderNo").Filterable(true).SetWidth(10);
                   columns.Add(c => c.ShopName).Titled("Shop Name").Filterable(true).SetWidth(15);
                   columns.Add(c => c.PaymentMode).Titled("Payment Mode").Filterable(true).SetWidth(10);
                   columns.Add(c => c.Price).Titled("Amount").Filterable(true).SetWidth(1);
                   columns.Add(c => c.CustomerPhoneNumber).Titled("Cust.Phone No.").Filterable(true).SetWidth(15);
                   columns.Add(c => c.DateEncoded).Titled("Order Time").Filterable(true).SetWidth(10);
                  // columns.Add(c => c.ShopCancelledTime).Titled("Cancelled Time").Filterable(true).SetWidth(10);
                  // columns.Add(c => c.ShopCancelPeriod).Titled("Shop Cancel Period").Filterable(true).SetWidth(15);
                   columns.Add().Encoded(false).Sanitized(false)
                  .RenderValueAs(o => Html.ActionLink("View", "Edit", new { ordernumber = o.OrderNumber, id = @ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id) }, new { @class = "btn btn-sm btn-info btn-block mt-2", }).ToHtmlString()).Titled("Action").SetWidth(10);
               }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script>
        $(document).ready(function () {
            $('#ShopId').select2({
                placeholder: "Search Shop",
                ajax: {
                    url: "/Cart/GetShopSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ShopName"]').val(e.params.data.text);
            });

            $("#Filter").click(function () {
                var shopId = $("#ShopId").val();
                window.location.href = "/Cart/CustomerNotPickupList/?shopId=" + shopId;
            });
        });
    </script>
}

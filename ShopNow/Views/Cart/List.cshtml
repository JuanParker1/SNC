@model ShopNow.ViewModels.OrderListViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "Cart List";
}
<title>ShopNow | Order List</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<style>
    .grid-mvc {
        overflow-x: scroll;
    }

        .grid-mvc table td1 {
            width: 50%;
        }

    table > thead > tr > th:nth-child(1) {
        padding: 12px 7px;
    }
    table > thead > tr > th:nth-child(2) {
        padding: 12px 14px;
    }
    table > thead > tr > th:nth-child(3) {
        padding: 12px 17px;
    }
    table > thead > tr > th:last-child {
        padding: 12px 4px;
    }
    .vertical-middle {
        vertical-align: middle !important;
    }
</style>
<div class="container-fluid">
    <div class="row my-2">
        <div class="col-md-2">
            <h5 class="text-success" style="letter-spacing:1px">ORDER LIST</h5>
        </div>
        <div class="col-md-8">
            <form method="get" action="/Cart/List" id="filter-form">
                <div class="row">
                    <div class="col-md-3">
                        <select name="ShopId" id="ShopId" class="form-control">
                            @if (Model.ShopId != 0)
                            {
                                <option value="@Model.ShopId">@Model.ShopName</option>
                            }
                        </select>
                        <input type="hidden" name="ShopName" id="ShopName" value="@Model.ShopName" />
                    </div>
                    <div class="col-md-3">
                        <select id="select-district" class="form-control" name="District">
                            @if (!string.IsNullOrEmpty(Model.District))
                            {
                                <option value="@Model.District">@Model.District</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select id="select-status" class="form-control" name="Status">
                            <option value="0">All</option>
                            <option value="2">Pending</option>
                            <option value="3">Order Accepted</option>
                            <option value="4">Order Assigned</option>
                            <option value="5">Order Pickedup</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <input name="IsPickupDrop" type="hidden" />
                        <input type="submit" class="btn btn-success btn-block" value="Filter" />
                    </div>
                    <div class="col-md-2">
                        <a href="/Cart/List" class="btn btn-warning btn-block">Clear</a>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-md-2 text-right">
            <a class="btn btn-outline-success" href="/Cart/DeliveryLocationMap" target="_blank">Delivery Location Map</a>
        </div>
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <label> <input type="checkbox" id="pickup-check" value="@Model.IsPickupDrop" /> Pickup Drop</label>
                        <button id="btn-assign-deliveryboymodal" class="btn btn-primary float-right mb-3" data-toggle="modal" data-target="#modal-assign-deliveryboy" disabled>Assign Delivery Boy</button>
                        @*<div class="clearfix"></div>*@
                    </div>
                    @Html.Grid(Model.ListItems).Columns(columns =>
               {
                   columns.Add(c => c.No).Titled("Sl.No").SetWidth(0);
                   columns.Add(c => c.OrderNumber).Titled("OrderNo").Filterable(true).SetWidth(10);
                   columns.Add().Encoded(false).Sanitized(false).RenderValueAs(o=> o.ShopName +" "+"<span class='font-weight-bold text-danger'>"+ o.Remarks+"</span>").Titled("Shop Name").Filterable(true).SetWidth(30);
                   columns.Add(c => c.ShopPhoneNumber).Titled("Shop PhoneNo").Filterable(true).SetWidth(35);
                   columns.Add(c => c.PaymentMode).Titled("PaymentMode").Filterable(true).SetWidth(35);
                   columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                       .RenderValueAs(o => (o.Amount == 0) ? "<a href='#modal-refund' data-orderno='" + o.OrderNumber + "' data-totalprice='" + o.TotalPrice + "' data-distance='"+o.Distance+"' data-toggle='modal' data-target='#modal-updateAmount' class='btn-modal-updateAmount'><u>" + o.Amount + "</u></a>" : "<span>" + Math.Round(o.Amount) + "</span>").Titled("Amount").SetWidth(10);
                   //columns.Add(c => c.Amount).Titled("Amount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.DeliveryAddress).Titled("Delivery Address").Filterable(true).SetWidth(40);
                   columns.Add(c => c.CustomerPhoneNumber).Titled("Cust.PhoneNo").Filterable(true).SetWidth(35);
                   //columns.Add(c => c.DateEncoded).Titled("Date").Filterable(true).SetWidth(10).Format("{0:dd-MMM-yyyy}");
                   // columns.Add(c => c.OrderStatusText).Titled("Order Status").Filterable(true).SetWidth(15);
                   columns.Add().Encoded(false).Sanitized(false)
                 .RenderValueAs(o => o.IsPickupDrop == true ? "<span>" + o.OrderStatusText + "</span><br/><span class='text-primary font-weight-bold'>Pickup-Drop</span>" : "<span>" + o.OrderStatusText + "</span>").Titled("Order Status").SetWidth(5);
                   columns.Add().Encoded(false).Sanitized(false)
                   .RenderValueAs(o => Html.ActionLink("View", "Edit", new { OrderNumber = o.OrderNumber, id = @ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id) }, new { @class = "btn btn-vsm btn-info", @style = "padding: 3px 26px" }).ToHtmlString() +
                   Html.ActionLink("Details", "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeLong(o.Id) }, new { @class = "btn btn-vsm btn-secondary mt-1", @style = "padding: 3px 20px" }).ToHtmlString()).Titled("Action").SetWidth(5);
                   columns.Add().Encoded(false).Sanitized(false)
                .RenderValueAs(o => (o.RefundAmount == 0 || o.RefundAmount == null) ? "<a href='#modal-refund' data-id='" + o.Id + "' data-toggle='modal' data-target='#modal-refund' class='btn btn-sm btn-primary btn-modal-refund btn-block mt-3'>Refund</a>" : o.RefundAmount.Value > 0 ? "<span>" + o.RefundAmount + "(" + o.RefundRemark + ")" + "</span>" : "N/A").Titled("Refund").SetWidth(5);
                   columns.Add().Encoded(false).Sanitized(false)
               .RenderValueAs(o => (o.Status == 3 || o.Status == 8) ? "<input class='assign-checkbox' type='checkbox' data-id='" + o.Id + "' data-district='" + o.ShopDistrict + "' />" : "").Titled("").Css("vertical-middle").SetWidth(1);
               }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-refund" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body">
                <form method="get" action="/Cart/AddRefundFromShopOrderProcessing">
                    <input type="hidden" name="Id" />
                    <input type="hidden" name="Redirection" value="0" />
                    <h5>Initiate Refund</h5>
                    <div class="form-group">
                        <label>Amount</label>
                        <input class="form-control" type="number" name="Amount" required />
                    </div>
                    <div class="form-group">
                        <label>Remarks</label>
                        <input class="form-control" type="text" name="Remark" required />
                    </div>
                    <div class="text-right">
                        <button class="btn btn-sm btn-success mr-3">Submit</button>
                        <button class="btn btn-sm btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-assign-deliveryboy" role="dialog">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-body">
                <form method="get" action="/Cart/AddRefundFromShopOrderProcessing">
                    <input type="hidden" name="Id" />
                    <input type="hidden" name="Redirection" value="0" />
                    <h5>Assign Delivery Boy</h5>
                    <div class="form-group">
                        <select class="form-control" name="DeliveryBoyId" id="select-deliveryboy"></select>
                    </div>
                    <div class="text-right">
                        <button id="btn-assign-deliveryboy" class="btn btn-sm btn-success mr-3">Submit</button>
                        <button class="btn btn-sm btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modal-updateAmount" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-body">
                <form method="get" action="/Cart/UpdateAmount">
                    <input type="hidden" name="OrderNumber" id="OrderNumber" />
                    <h5>Update Amount <span class="ml-2" id="orderno-text"></span></h5>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>Total Price</label>
                            <input class="form-control" step="any" type="number" name="TotalPrice" disabled />
                        </div>
                        <div class="form-group col-md-4">
                            <label>Convenient Charge</label>
                            <input class="form-control" step="any" type="number" name="ConvenientCharge" required/>
                        </div>
                        <div class="form-group col-md-4">
                            <label>Delivery Charge (<span class="font-weight-bold" id="distance"></span>Km)</label>
                            <input class="form-control" step="any" type="number" name="GrossDeliveryCharge" required />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>Shop Delivery Discount</label>
                            <input class="form-control" step="any" type="number" name="ShopDeliveryDiscount" required onkeyup="calculateDeliveryCharge()" />
                        </div>
                        <div class="form-group col-md-4">
                            <label>Net Delivery Charge</label>
                            <input class="form-control" step="any" type="number" name="DeliveryCharge" required />
                        </div>
                        <div class="form-group col-md-4">
                            <label>Net Total</label>
                            <input class="form-control" step="any" type="number" name="Amount" required />
                        </div>
                    </div>
                    <div class="row">
                         <div class="form-group col-md-4">
                            <div class="dist"></div>
                        </div>
                    </div>
                    <div class="text-right">
                        <button class="btn btn-success mr-3">Submit</button>
                        <button class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts
{
    <!--Select2-->
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <!--Select2 End-->
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $('select[name="Status"] option[value="' +@Model.Status+'"]').attr("selected", true);
            if ('@Model.IsPickupDrop' == "True")
                $('#pickup-check').prop('checked', true);
            var orderIdArray = [];
          
            $('#ShopId').select2({
                placeholder: "Search Shop",
                width: '100%',
                ajax: {
                    url: "/Cart/GetShopSelect2",
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ShopName"]').val(e.params.data.text);
            });
            
            $(".btn-modal-refund").click(function () {
                var id = $(this).data('id');
                $('[name="Id"]').val(id);
                $('#modal-refund').modal('show');
            });

            $('#select-district').select2({
                placeholder: "Search District Name",
                width: '100%',
                ajax: {
                    url: "/Shop/GetDistrictSelect2",
                    delay: 250,
                    dataType: 'json'
                }
            });

            $('table').on('click', '.assign-checkbox', function () {
                var $this = $(this);

                var numberOfChecked = $('.assign-checkbox:checked').length;
                if (numberOfChecked > 0) {
                    $('#btn-assign-deliveryboymodal').prop('disabled', false);
                } else {
                    $('#btn-assign-deliveryboymodal').prop('disabled', true);
                }

                if ($this.prop('checked') == true) {
                    var item = {
                        OrderId: $this.data('id')
                    };
                    orderIdArray.push(item);
                   
                    $('#select-deliveryboy').select2({
                        placeholder: "Select Delivery Boy",
                        width: '100%',
                        ajax: {
                            url: "/DeliveryBoy/GetDeliveryBoyWithinLimitSelect2?district=" + $this.data('district'),
                            delay: 250,
                            dataType: 'json'
                        }
                    });
                } else {
                    removeFromArray($this.data('id'));
                }
            });
            
            //$('#select-deliveryboy').select2({
            //    placeholder: "Select Delivery Boy",
            //    width: '100%',
            //    ajax: {
            //        url: "/DeliveryBoy/GetDeliveryBoyWithinLimitSelect2?district=" + district,
            //        delay: 250,
            //        dataType: 'json'
            //    }
            //});

            $('#btn-assign-deliveryboy').on('click', function () {
                var model = {
                    DeliveryBoyId: $("#select-deliveryboy").val(),
                    OrderLists: orderIdArray,
                };
                $.post('/Cart/MultipleOrderAssignDeliveryBoy', model, function (data) {
                    if (data)
                        location.reload();
                    else
                        swal("Notice!", "Something went wrong, please try again.", "error")
                    });
            });
            function removeFromArray(id) {
                const indx = orderIdArray.findIndex(v => v.OrderId === id);
                orderIdArray.splice(indx, 1);
            }

            $('#pickup-check').on('change', function () {
                if ($(this).prop('checked') == true)
                    $('[name="IsPickupDrop"]').val(true);
                else
                    $('[name="IsPickupDrop"]').val(false);
                $('#filter-form').submit();
            });

            $(".btn-modal-updateAmount").click(function () {
                var orderno = $(this).data('orderno');
                var totalprice = $(this).data('totalprice');
                var distance = $(this).data('distance');
                if (distance == 0) {
                    $(".dist").append("<label>Distance</label><input class='form-control' step='any' type='number' name='Distance' />");
                }
                $('[name="OrderNumber"]').val(orderno);
                $('[name="TotalPrice"]').val(totalprice);
                $("#distance").text(distance);
                $('#orderno-text').text('- #' + orderno);
                $('#modal-updateAmount').modal('show');
            });

            $('#modal-updateAmount').on('hidden.bs.modal', function () {
                $('input[name="ConvenientCharge"]').val('');
                $('input[name="GrossDeliveryCharge"]').val('');
                $('input[name="ShopDeliveryDiscount"]').val('');
                $('input[name="DeliveryCharge"]').val('');
                $('input[name="Amount"]').val('');
            });

        });
        function calculateDeliveryCharge() {
            var grossDC = $('input[name="GrossDeliveryCharge"]').val();
            var orderno = $("#OrderNumber").val();
            $.getJSON("/Cart/GetDeliveryDiscount", { OrderNumber: orderno }, function (data) {
                if (data != null) {
                    var deliveryDiscount = data;
                    if (deliveryDiscount >= grossDC) {
                        deliveryDiscount = grossDC;
                    }
                    $('input[name="ShopDeliveryDiscount"]').val(deliveryDiscount);
                    var deliveryCharge = Math.round(parseFloat(grossDC) - parseFloat(deliveryDiscount));
                    $('input[name="DeliveryCharge"]').val(deliveryCharge);
                    var totalprice = $('input[name="TotalPrice"]').val();
                    var convenient = $('input[name="ConvenientCharge"]').val();
                    var nettotal = parseFloat(totalprice) + parseFloat(deliveryCharge) + parseFloat(convenient);
                    $('input[name="Amount"]').val(nettotal);
                }
            });
           
        }
    </script>
}


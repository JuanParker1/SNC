@model ShopNow.ViewModels.AddOnCategoryListViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "AddOnCategory";
}

<title>ShopNow | AddOn Category List</title>

<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <h5 class="text-success" style="letter-spacing:1px">ADDON CATEGORY LIST</h5>
        </div>
        <div class="col-md-6 text-right">
            <a data-toggle="modal" data-target="#createModal" href="createModal"><span class="fa fa-plus"></span> New AddOn Category</a>
        </div>
    </div>

    <div class="col-md-12">
        <div class="card shadow mt-3">
            <div class="card-body">
                @Html.Grid(Model.List).Columns(columns =>
                {
                   columns.Add(b => b.Name).Titled("AddOn Category Name").Filterable(true).SetWidth(20);
                   columns.Add().Encoded(false).Sanitized(false).Titled("Action").Filterable(false).SetWidth(20)
                  .RenderValueAs(b =>@<div>
                        <a href="editModal" data-id=@b.Id data-name="@b.Name" class="text-info edit-prompt mr-5" data-toggle="modal" data-target="#editModal"><i class="fa fa-edit fa-lg"></i></a>
                        <a href="javascript:void(0)" data-id=@b.Id class="text-danger btnDelete" ><i class="fa fa-trash fa-lg"></i></a>
                    </div>  );
                }).WithPaging(20).Sortable(true)
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-info">
                <h5 class="modal-title" id="createModalLabel">New AddOn Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-8">
                        <label class="col-form-label font-weight-bold text-secondary">AddOn Category Name</label>
                        <input type="text" name="Name" id="Name" class="form-control" />
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" id="Create" name="Create" value="Save" class="btn btn-success float-right Save" />
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header alert alert-info">
                <input type="hidden" name="AddOnCategoryId" id="AddOnCategoryId" />
                <h5 class="modal-title" id="editModalLabel">Update AddOn Category</h5>
                <button type="button" class="btnClose close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <div class="col-md-8">
                        <label class="col-form-label font-weight-bold text-secondary">AddOn Category Name</label>
                        <div id="AddOnCategoryName"></div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="button" id="Edit" name="Edit" value="Update" class="btn btn-success float-right Edit" />
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/ValidateRequiredFields.js"></script>
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {            

            $('#Create').on('click', function () {
                var name = $('#Name').val();
                var isValidate = false;
                var requiredArr = [
                    'Name'
                ];
                isValidate = ValidateEmptyRequiredFiels(requiredArr);
                if (isValidate) {
                    $.getJSON("/AddOnCategory/Save?name=" + name, function (data) {
                        if (data.IsAdded == true) {
                            swal({
                                title: data.message,
                                text: "",
                                type: "success"
                            }, function () {
                                window.location.reload();
                            });
                        } else {
                            if (data.message1 != null || data.message1 != "") {
                                swal(data.message1, "", "warning");
                                $('#Name').val("");
                            }
                        }
                    });
                }
            });

            $(".edit-prompt").click(function () {
                var Id = $(this).attr('data-id');
                var name = $(this).attr('data-name');
                $("#AddOnCategoryId").val(Id);
                $("#AddOnCategoryName").append("<input type=text name=AName id=AName class=form-control value='" + name + "' />");
            });

            $(".Edit").click(function () {
                var Id = $("#AddOnCategoryId").val();
                var addOnCategoryName = $("#AName").val();
                if (addOnCategoryName == "" || addOnCategoryName == null) {
                    swal("Name is Empty.", "Please Enter a AddOn Category Name", "warning");
                }
                else if (addOnCategoryName != "" || addOnCategoryName != null) {
                    $.getJSON("/AddOnCategory/Edit", { Id: Id, name: addOnCategoryName }, function (data) {
                        if (data.message != null || data.message != "") {
                            swal({
                                title: data.message,
                                text: "",
                                type: "success"
                            }, function () {
                                window.location.reload();
                            });
                        }
                    });
                }
            });

            $("#editModal").on("hidden.bs.modal", function () {
                window.location.reload();
            });

            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/AddOnCategory/Delete", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

        });

    </script>
}







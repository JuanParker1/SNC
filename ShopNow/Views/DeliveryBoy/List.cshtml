@model IEnumerable<ShopNow.Models.GetDeliveryBoy>
@using GridMvc.Html
@{
    ViewBag.Title = "DeliveryBoy List";
}
<title>ShopNow | @ViewBag.Title</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<link href="~/Content/switch.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <h4 class="text-success">@ViewBag.Title</h4>
        </div>
        <div class="col-md-6 ml-auto text-right text-nowrap" style="margin:0">
            <a href="~/DeliveryBoy/InactiveList" class="text-danger mr-2" target="_self"><span class="fa fa-list-ul"></span> Approval Pending</a>
            <a href="~/DeliveryBoy/Create" class="mr-2" target="_self"><span class="fa fa-plus"></span> New Delivery Boy</a>
            @*<a href="~/DeliveryBoy/AssignFranchise" target="_self"><span class="fa fa-tasks"></span> Assign Marketing Agent</a>*@
        </div>

        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model).Columns(columns =>
               {
               columns.Add(c => c.Name).Titled("Name").Encoded(false).Sanitized(false).Filterable(true).SetWidth(20)
                 //  .RenderValueAs(o => @<div><a href="/DeliveryBoy/Details?id=@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)"></a></div>);
.RenderValueAs(model => Html.ActionLink(model.Name, "Details", new { id = @ShopNow.Helpers.AdminHelpers.ECodeInt(model.Id) }).ToHtmlString());
columns.Add(c => c.PhoneNumber).Titled("Phone No.").Filterable(true).SetWidth(15);
columns.Add(c => c.Email).Titled("Email").Filterable(true).SetWidth(10);
columns.Add().Encoded(false).Sanitized(false).Titled("Image").Filterable(false).SetWidth(10).RenderValueAs(c => @<div><img alt="Image" data-toggle="modal" data-target="#myModal" class="img-thumbnail DeliveryBoyImage" src="@c.ImagePath" style="width:60px; height:45px" onerror="this.src='/Images/No Photo.png'" /></div>);
columns.Add().Encoded(false).Sanitized(false).RenderValueAs(s => new HtmlString
("<label class='switch'> <input type='checkbox' value='" + s.Active + "' Id='Id_" + s.Id + "' class='CheckOnline' data-id='" + s.Id + "'><span class='slider round'></span></label>")).Titled("IsOnline").SetWidth(10);
columns.Add().Encoded(false).Sanitized(false).Titled("Action").SetWidth(5)
.RenderValueAs(o => @<div>
                    <a href="/DeliveryBoy/Edit?Id=@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)" class="text-info mr-5"><i class="fa fa-edit fa-lg"></i></a>
                    <a href="javascript:void(0)" data-id=@o.Id class="text-danger btnDelete"><i class="fa fa-trash fa-lg mr-5"></i></a>
                    <a href="/DeliveryBoy/Clear?Id=@ShopNow.Helpers.AdminHelpers.ECodeInt(o.Id)" class="text-info"><i class="fa fa-refresh fa-lg"></i></a>
                </div>);
          }).WithPaging(20).Sortable(true)
                </div>
                </div>
        </div>
    </div>
</div>

<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <span class="close" data-dismiss="modal">&times;</span>
        <a href="~/Home/ImageDenied">
            <img class="modal-content" id="myImage">
        </a>
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/sweetalert/sweetalert.min.js"></script>
    <link href="~/Content/sweetalert/sweetalert.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {

            $('table tbody tr').each(function () {
                var $this = $(this).find(".CheckOnline");
                if ($this.val() == '1')
                    $this.prop('checked', true);
                else
                    $this.prop('checked', false);
            });

            $('.CheckOnline').on('click', function () {
                var Id = $(this).data('id');
                if ($(this).is(':checked') == 1) {
                    $.post('/DeliveryBoy/UpdateDeliveryBoyOnline', { Id: Id, Active: 1 }, function () { });
                }
                else {
                    $.post('/DeliveryBoy/UpdateDeliveryBoyOnline', { Id: Id, Active: 0 }, function () { });
                }
            });

            var modal = document.getElementById('myModal');
            var img = document.getElementsByClassName('DeliveryBoyImage');
            var modalImg = document.getElementById("myImage");
            $(img).click(function () {
                modal.style.display = "block";
                modalImg.src = this.src;
                if (this.src == "") {
                    $('#myModal').hide();
                }
                else {
                    $('#myModal').modal('show');
                }
            });

            $(".btnDelete").click(function () {
                var Id = $(this).attr('data-id');
                swal({
                    title: "Are you sure want to delete?",
                    text: "You will not be able to recover this file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, Delete it!",
                    cancelButtonText: "No, cancel",
                    closeOnConfirm: false,
                    closeOnCancel: true
                },
                    function (isConfirm) {
                        if (isConfirm) {
                            $.getJSON("/DeliveryBoy/Delete", { Id: Id }, function (data) {
                                if (data == true) {
                                    window.location.reload();
                                }
                            });
                        }
                    }
                );
            });

        });
    </script>
}

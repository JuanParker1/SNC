@model ShopNow.ViewModels.ShopBillDifferenceReportViewModel
@using GridMvc.Html
@{
    ViewBag.Title = "Shop Bill Difference Report";
}
<title>SNOWCH | @ViewBag.Title</title>
<link href="~/Content/Gridmvc.css" rel="stylesheet" />
<script src="~/Scripts/gridmvc.js"></script>
<style>
    .dis-none {
        display: none;
    }

    table > thead > tr > th:nth-child(5) {
        padding: 12px 15px;
    }

    table > thead > tr > th:nth-child(6) {
        padding: 12px 18px;
    }
</style>
<div class="container-fluid">
    <form method="get" action="/Payment/ShopBillDifferenceReport">
        <div class="row">
            <div class="col-md-3">
                <h5 class="mt-1 text-uppercase text-success">@ViewBag.Title</h5>
            </div>
            <div class="col-md-4">
                <div class="input-daterange input-group">
                    <input type="date" class="form-control well well-sm" placeholder="From Date" id="datepicker" name="StartDate" @if (Model.StartDate != null) { <text> value="@Model.StartDate.Value.ToString("yyyy-MM-dd")" </text> }>
                    <span class="input-group-addon mx-3 mt-2">to</span>
                    <input type="date" class="form-control" placeholder="To Date" id="datepicker1" name="EndDate" @if (Model.EndDate != null) { <text> value="@Model.EndDate.Value.ToString("yyyy-MM-dd")" </text> }>
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <select class="form-control" id="select-shop" name="ShopId">
                        @if (!string.IsNullOrEmpty(Model.ShopName))
                        {
                            <option value="@Model.ShopId">@Model.ShopName</option>
                        }
                    </select>
                    <input type="hidden" name="ShopName" value="@Model.ShopName" />
                </div>
            </div>
            <div class="col-md-3">
                <input type="submit" class="btn btn-info" value="Filter" />
                <a href="/Payment/ShopBillDifferenceReport" class="btn btn-warning">Clear</a>
                <a href="/Payment/ShopBillDifferencePendingReport" class="btn btn-primary">Pending List</a>
                <a href="" id="btnExport" class="btn btn-secondary"><i class="fa fa-file-excel-o fa-lg" aria-hidden="true"></i></a>
            </div>
        </div>
    </form>
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow mt-3">
                <div class="card-body">
                    @Html.Grid(Model.ListItems).Columns(columns =>
               {
                   columns.Add(c => c.OrderNumber).Titled("Order Number").Filterable(true).SetWidth(10);
                   columns.Add(c => c.OrderDate).Titled("Order Date").Filterable(true).SetWidth(10).Format("{0:dd-MMM-yyyy}");
                   columns.Add(c => c.ShopName).Titled("Shop Name").Filterable(true).SetWidth(10);
                   columns.Add(c => c.BillNo).Titled("Shop Bill No").Filterable(true).SetWidth(10);
                   columns.Add(c => c.BillAmount).Titled("Shop Bill Amount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.TotalPrice).Titled("SNOWCH Bill Amount").Filterable(true).SetWidth(20);
                   columns.Add(c => c.DifferenceAmount).Titled("Diff.Amount").Filterable(true).SetWidth(10);
                   columns.Add(c => c.DifferencePercentage).Titled("Diff.Percentage").Filterable(true).SetWidth(10);
                   columns.Add().Encoded(false).Sanitized(false)
                   .RenderValueAs(o => Html.ActionLink("PickupSlip", "PickupSlip", "Cart", new { OrderNumber = o.OrderNumber, id = @ShopNow.Helpers.AdminHelpers.ECodeLong(o.OrderId) }, new { @class = "btn btn-vsm btn-secondary", @style = "padding: 3px 26px" }).ToHtmlString()).Titled("Action").SetWidth(10);
               }).WithPaging(20).Sortable(true)
                </div>
            </div>
        </div>
    </div>
</div>

<table id="table-excel" class="d-none">
    <thead>
        <tr>
            <td>Order Number</td>
            <td>Shop Name</td>
            <td>Shop Bill Number</td>
            <td>Shop Bill Amount</td>
            <td>SNOWCH Bill Amount</td>
            <td>Difference Amount</td>
            <td>Difference Percentage</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ListItems)
        {
            <tr>
                <td>@item.OrderNumber</td>
                <td>@item.ShopName</td>
                <td>@item.BillNo</td>
                <td>@item.BillAmount</td>
                <td>@item.TotalPrice</td>
                <td>@item.DifferenceAmount</td>
                <td>@item.DifferencePercentage</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    <script src="~/Scripts/select2/js/select2.js"></script>
    <link href="~/Scripts/select2/css/select2.css" rel="stylesheet" />
    <link href="~/Content/select2/select2.custom.css" rel="stylesheet" />
    <script src="~/Scripts/exporttoexcel/jquery.table2excel.js"></script>
    <script>
        $(document).ready(function () {
           
            $("#btnExport").click(function () {
                $("#table-excel").table2excel({
                    name: "Worksheet Name",
                    filename: "ShopBillDifference",
                    fileext: ".xls",
                    exclude_links: true
                });
            });

            $('#select-shop').select2({
                placeholder: "Select Shop",
                ajax: {
                    url: "/Shop/GetActiveListSelect2",
                    width: '100%',
                    delay: 250,
                    dataType: 'json'
                }
            }).on('select2:select', function (e) {
                $('input[name="ShopName"]').val(e.params.data.text);
            });
        });
    </script>
}
